{
	"name": "df_csv_to_stg",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dls_processing_csv",
						"type": "DatasetReference"
					},
					"name": "processingCsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_stg_transactions",
						"type": "DatasetReference"
					},
					"name": "stgTransactions"
				}
			],
			"transformations": [
				{
					"name": "AddColumn"
				},
				{
					"name": "SurrogateKey1"
				}
			],
			"script": "parameters{\n\tfileName as string ('4')\n}\nsource(output(\n\t\tTRANSACTION_DATE as string,\n\t\tTRANSACTION_TYPE_CODE as string,\n\t\tITEM_GROUP as string,\n\t\tITEM_CODE as string,\n\t\tITEM_BARCODE as string,\n\t\tCOMPANY_CR as string,\n\t\tOTHER_ENTITY_CR as string,\n\t\tSTORE_CODE as string,\n\t\tTARGET_STORE_CODE as string,\n\t\tQUANTITY as string,\n\t\tUOM as string,\n\t\tSELLING_PRICE as string,\n\t\tLOCAL_PURCHASE_ORDER as string,\n\t\tSALES_ORDER as string,\n\t\tDELIVER_NOTE_NUMBER as string,\n\t\tGOOD_RECEIVED_NOTE as string,\n\t\tINVOICE_NUMBER as string,\n\t\tRETURN_NOTE_NUMBER as string,\n\t\tCUSTOMER_STATEMENT_NUMBER as string,\n\t\t{Internal_Transfer/Number_code} as string,\n\t\tNUMBER_OF_INVOICES as string,\n\t\tNOTES as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> processingCsv\nprocessingCsv derive(STG_FILENAME = $fileName,\n\t\tSTG_FILEDATE = left(toString(fromUTC(currentTimestamp(), 'Asia/Istanbul')),19),\n\t\tTRANSACTION_DATE = coalesce(toString(toDate(regexReplace(TRANSACTION_DATE,'[^0-9a-zA-Z]+',''),'yyyyMMdd')),toString(toDate(regexReplace(TRANSACTION_DATE,'[^0-9a-zA-Z]+',''),'MMddyyyy')),toString(toDate(regexReplace(TRANSACTION_DATE,'[^0-9a-zA-Z]+',''),'ddMMyyyy')),TRANSACTION_DATE)) ~> AddColumn\nAddColumn keyGenerate(output(SK_ID_SUR as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_GROUP as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_SOURCE_WAREHOUSE as string,\n\t\tID_TARGET_WAREHOUSE as string,\n\t\tMT_QUANTITY as string,\n\t\tID_UOM as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_LPO as string,\n\t\tID_SALES_ORDER as string,\n\t\tID_DELIVERY_NOTE as string,\n\t\tID_GRN as string,\n\t\tID_INVOICE as string,\n\t\tID_RETURN_NOTE as string,\n\t\tID_CUSTOMS_STATEMENT as string,\n\t\tID_REFERANCE_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tMT_INVOICE_COUNT as string,\n\t\tDS_TRANSACTION_REASON as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tID_YEARMONTHDAY = TRANSACTION_DATE,\n\t\tID_TRANSACTION_TYPE = TRANSACTION_TYPE_CODE,\n\t\tID_ITEM_GROUP = ITEM_GROUP,\n\t\tID_ITEM_CODE = ITEM_CODE,\n\t\tID_ITEM_BARCODE = ITEM_BARCODE,\n\t\tID_ENTITY_CR = COMPANY_CR,\n\t\tID_CUSTOMER_ENTITY_CR = OTHER_ENTITY_CR,\n\t\tID_SOURCE_WAREHOUSE = STORE_CODE,\n\t\tID_TARGET_WAREHOUSE = TARGET_STORE_CODE,\n\t\tMT_QUANTITY = QUANTITY,\n\t\tID_UOM = UOM,\n\t\tMT_DISCOUNT_AMOUNT = SELLING_PRICE,\n\t\tID_LPO = LOCAL_PURCHASE_ORDER,\n\t\tID_SALES_ORDER = SALES_ORDER,\n\t\tID_DELIVERY_NOTE = DELIVER_NOTE_NUMBER,\n\t\tID_GRN = GOOD_RECEIVED_NOTE,\n\t\tID_INVOICE = INVOICE_NUMBER,\n\t\tID_RETURN_NOTE = RETURN_NOTE_NUMBER,\n\t\tID_CUSTOMS_STATEMENT = CUSTOMER_STATEMENT_NUMBER,\n\t\tID_REFERANCE_CODE = {Internal_Transfer/Number_code},\n\t\tMT_INVOICE_COUNT = NUMBER_OF_INVOICES,\n\t\tDS_TRANSACTION_REASON = NOTES,\n\t\tSTG_FILENAME,\n\t\tSTG_FILETIME = STG_FILEDATE,\n\t\tSK_ID = SK_ID_SUR\n\t)) ~> stgTransactions"
		}
	}
}