{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfpsmsiidt001"
		},
		"ls_dsqlpqtr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_dsqlpqtr'"
		},
		"ls_psmsii_syntodls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_psmsii_syntodls'"
		},
		"ls_psmsii_syntodsqlp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_psmsii_syntodsqlp'"
		},
		"ls_psmsii_syntoobasesql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_psmsii_syntoobasesql'"
		},
		"ls_psmsii_syntosql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_psmsii_syntosql'"
		},
		"ls_qtrsqldb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_qtrsqldb'"
		},
		"ls_psmsii_syntodls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsapsmsiidt001.dfs.core.windows.net"
		},
		"pendp_psmsii_adftodls_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/047cf264-f2a3-43e7-b2e5-1ab1fc225ba1/resourceGroups/rg-psmsii-dt-001/providers/Microsoft.Storage/storageAccounts/dlsapsmsiidt001"
		},
		"pendp_psmsii_adftodls_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"pendp_psmsii_adftodls_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"dlsapsmsiidt001.dfs.core.windows.net"
			]
		},
		"pendp_psmsii_adftodsqlp_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/047cf264-f2a3-43e7-b2e5-1ab1fc225ba1/resourceGroups/rg-psmsii-dt-001/providers/Microsoft.Synapse/workspaces/synpsmsiidt001ws1"
		},
		"pendp_psmsii_adftodsqlp_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"pendp_psmsii_adftodsqlp_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"synpsmsiidt001ws1.sql.azuresynapse.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DENEME_XML_XSDLI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "xsd",
									"detectDataType": true,
									"namespaces": true,
									"namespacePrefixes": {
										"https://dlsapsmsiidt001.blob.core.windows.net/input/dene.xsd": "dene.xsd"
									}
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationSender']"
										},
										"sink": {
											"name": "NotificationSender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationRef']"
										},
										"sink": {
											"name": "NotificationRef",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationDate']"
										},
										"sink": {
											"name": "NotificationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['declarationNo']"
										},
										"sink": {
											"name": "declarationNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['declarationStatus']"
										},
										"sink": {
											"name": "declarationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['declarationType']"
										},
										"sink": {
											"name": "declarationType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['supplierCR']"
										},
										"sink": {
											"name": "supplierCR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['supplierCustomsCode']"
										},
										"sink": {
											"name": "supplierCustomsCode",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['countryOfLoading']"
										},
										"sink": {
											"name": "countryOfLoading",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['accountType']"
										},
										"sink": {
											"name": "accountType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['companyName']"
										},
										"sink": {
											"name": "companyName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['establishmentId']"
										},
										"sink": {
											"name": "establishmentId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['companyNameAr']"
										},
										"sink": {
											"name": "companyNameAr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['address']"
										},
										"sink": {
											"name": "address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['portType']"
										},
										"sink": {
											"name": "portType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['entryOrExitPortName']"
										},
										"sink": {
											"name": "entryOrExitPortName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['clearingAgencyCR']"
										},
										"sink": {
											"name": "clearingAgencyCR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['clearingAgencyNameEng']"
										},
										"sink": {
											"name": "clearingAgencyNameEng",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['clearingAgencyNameAR']"
										},
										"sink": {
											"name": "clearingAgencyNameAR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['portOfLoading']"
										},
										"sink": {
											"name": "portOfLoading",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['importerName']"
										},
										"sink": {
											"name": "importerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['exporterName']"
										},
										"sink": {
											"name": "exporterName",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_custom_xml",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "dene.xml"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "customs_xml_xsd"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true,
									"namespacePrefixes": {
										"https://dlsapsmsiidt001.blob.core.windows.net/input/dene.xsd": "dene.xsd"
									}
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationSender']"
										},
										"sink": {
											"name": "NotificationSender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationRef']"
										},
										"sink": {
											"name": "NotificationRef",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationDate']"
										},
										"sink": {
											"name": "NotificationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['mobileNumber']"
										},
										"sink": {
											"name": "mobileNumber",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['ReleaseNotification']['Declaration']['SupervisorDetails']['Supervisor']"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_custom_xml",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "dene.xml"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "customs_xml_xsd2"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true,
									"namespacePrefixes": {
										"https://dlsapsmsiidt001.blob.core.windows.net/input/dene.xsd": "dene.xsd"
									}
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationSender']"
										},
										"sink": {
											"name": "NotificationSender"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationRef']"
										},
										"sink": {
											"name": "NotificationRef"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationDate']"
										},
										"sink": {
											"name": "NotificationDate"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['hscode']"
										},
										"sink": {
											"name": "hscode"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['itemQuantity']"
										},
										"sink": {
											"name": "itemQuantity"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['itemQuantityUOM']"
										},
										"sink": {
											"name": "itemQuantityUOM"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['netWeight']"
										},
										"sink": {
											"name": "netWeight"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['netWeightUOM']"
										},
										"sink": {
											"name": "netWeightUOM"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['countryOfOrigin']"
										},
										"sink": {
											"name": "countryOfOrigin"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['declaredValue']"
										},
										"sink": {
											"name": "declaredValue"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['foreignCurrency']"
										},
										"sink": {
											"name": "foreignCurrency"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['declaredValueQAR']"
										},
										"sink": {
											"name": "declaredValueQAR"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "ds_custom_xml",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "dene.xml"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "customs_xml_xsd3"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_custom_xml')]",
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DENEME_XML_XSDSIZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationSender']"
										},
										"sink": {
											"name": "NotificationSender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationRef']"
										},
										"sink": {
											"name": "NotificationRef",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationDate']"
										},
										"sink": {
											"name": "NotificationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['declarationNo']"
										},
										"sink": {
											"name": "declarationNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['declarationStatus']"
										},
										"sink": {
											"name": "declarationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['declarationType']"
										},
										"sink": {
											"name": "declarationType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['supplierCR']"
										},
										"sink": {
											"name": "supplierCR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['supplierCustomsCode']"
										},
										"sink": {
											"name": "supplierCustomsCode",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['countryOfLoading']"
										},
										"sink": {
											"name": "countryOfLoading",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['accountType']"
										},
										"sink": {
											"name": "accountType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['companyName']"
										},
										"sink": {
											"name": "companyName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['establishmentId']"
										},
										"sink": {
											"name": "establishmentId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['companyNameAr']"
										},
										"sink": {
											"name": "companyNameAr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['address']"
										},
										"sink": {
											"name": "address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['portType']"
										},
										"sink": {
											"name": "portType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['entryOrExitPortName']"
										},
										"sink": {
											"name": "entryOrExitPortName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['clearingAgencyCR']"
										},
										"sink": {
											"name": "clearingAgencyCR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['clearingAgencyNameEng']"
										},
										"sink": {
											"name": "clearingAgencyNameEng",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['clearingAgencyNameAR']"
										},
										"sink": {
											"name": "clearingAgencyNameAR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['portOfLoading']"
										},
										"sink": {
											"name": "portOfLoading",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['importerName']"
										},
										"sink": {
											"name": "importerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['exporterName']"
										},
										"sink": {
											"name": "exporterName",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_custom_xml",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "dene.xml"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "customs_xml"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationSender']"
										},
										"sink": {
											"name": "NotificationSender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationRef']"
										},
										"sink": {
											"name": "NotificationRef",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationDate']"
										},
										"sink": {
											"name": "NotificationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['mobileNumber']"
										},
										"sink": {
											"name": "mobileNumber",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['ReleaseNotification']['Declaration']['SupervisorDetails']['Supervisor']"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_custom_xml",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "dene.xml"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "customs_xml2"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationSender']"
										},
										"sink": {
											"name": "NotificationSender"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationRef']"
										},
										"sink": {
											"name": "NotificationRef"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['NotificationDate']"
										},
										"sink": {
											"name": "NotificationDate"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['hscode']"
										},
										"sink": {
											"name": "hscode"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['itemQuantity']"
										},
										"sink": {
											"name": "itemQuantity"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['itemQuantityUOM']"
										},
										"sink": {
											"name": "itemQuantityUOM"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['netWeight']"
										},
										"sink": {
											"name": "netWeight"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['netWeightUOM']"
										},
										"sink": {
											"name": "netWeightUOM"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['countryOfOrigin']"
										},
										"sink": {
											"name": "countryOfOrigin"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['declaredValue']"
										},
										"sink": {
											"name": "declaredValue"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['foreignCurrency']"
										},
										"sink": {
											"name": "foreignCurrency"
										}
									},
									{
										"source": {
											"path": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']['declaredValueQAR']"
										},
										"sink": {
											"name": "declaredValueQAR"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "ds_custom_xml",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "dene.xml"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "customs_xml3"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_custom_xml')]",
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ACT_PAUSE_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pauses SQL pool",
				"activities": [
					{
						"name": "Until SQL POOL is Paused or Online",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(bool(startswith(activity('Check for changed SQLPool Status').Output.Properties.status,'Paused')),Bool(startswith(activity('Check for changed SQLPool Status').Output.Properties.status,'Online')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check for changed SQLPool Status",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://management.azure.com/subscriptions/@{pipeline().parameters.SubscriptionID}/resourceGroups/@{pipeline().parameters.Synapse_ResourceGroupName}/providers/Microsoft.Synapse/workspaces/@{pipeline().parameters.SynapseWorkspace}/sqlPools/@{pipeline().parameters.SynapseDedicatedSQLPool}/?api-version=2019-06-01-preview",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "Wait before checking again",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Check for changed SQLPool Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@pipeline().parameters.WaitTimeUntil",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:20:00"
						}
					},
					{
						"name": "Check if SQL POOL is Paused",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Until SQL POOL is Paused or Online",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(startswith(activity('Check for changed SQLPool Status').Output.Properties.status,'Paused'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Pause SQL POOL",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://management.azure.com/subscriptions/@{pipeline().parameters.SubscriptionID}/resourceGroups/@{pipeline().parameters.Synapse_ResourceGroupName}/providers/Microsoft.Synapse/workspaces/@{pipeline().parameters.SynapseWorkspace}/sqlPools/@{pipeline().parameters.SynapseDedicatedSQLPool}/@{pipeline().parameters.Action}?api-version=2019-06-01-preview",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Nothing": "Nothing"
										},
										"body": {
											"value": "@concat('{','}')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "Wait before Continue",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Pause SQL POOL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@pipeline().parameters.WaitTime",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Action": {
						"type": "string",
						"defaultValue": "Pause"
					},
					"WaitTime": {
						"type": "int",
						"defaultValue": 10
					},
					"WaitTimeUntil": {
						"type": "int",
						"defaultValue": 30
					},
					"Synapse_ResourceGroupName": {
						"type": "string",
						"defaultValue": "rg-psmsii-dt-001"
					},
					"SynapseWorkspace": {
						"type": "string",
						"defaultValue": "synpsmsiidt001ws1"
					},
					"SynapseDedicatedSQLPool": {
						"type": "string",
						"defaultValue": "dsqlppsmsiidt01"
					},
					"SubscriptionId": {
						"type": "string",
						"defaultValue": "047cf264-f2a3-43e7-b2e5-1ab1fc225ba1"
					}
				},
				"folder": {
					"name": "PL_TOOL"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-21T14:08:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ACT_RESUME_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pauses SQL pool",
				"activities": [
					{
						"name": "Until SQL POOL is Paused or Online",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(bool(startswith(activity('Check for changed SQLPool Status').Output.Properties.status,'Paused')),Bool(startswith(activity('Check for changed SQLPool Status').Output.Properties.status,'Online')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check for changed SQLPool Status",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://management.azure.com/subscriptions/@{pipeline().parameters.SubscriptionID}/resourceGroups/@{pipeline().parameters.Synapse_ResourceGroupName}/providers/Microsoft.Synapse/workspaces/@{pipeline().parameters.SynapseWorkspace}/sqlPools/@{pipeline().parameters.SynapseDedicatedSQLPool}/?api-version=2019-06-01-preview",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "Wait before checking again",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Check for changed SQLPool Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@pipeline().parameters.WaitTimeUntil",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "00.20:00:00"
						}
					},
					{
						"name": "Check if SQL POOL is Paused",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Until SQL POOL is Paused or Online",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(startswith(activity('Check for changed SQLPool Status').Output.Properties.status,'Paused'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Resume SQL POOL",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://management.azure.com/subscriptions/@{pipeline().parameters.SubscriptionID}/resourceGroups/@{pipeline().parameters.Synapse_ResourceGroupName}/providers/Microsoft.Synapse/workspaces/@{pipeline().parameters.SynapseWorkspace}/sqlPools/@{pipeline().parameters.SynapseDedicatedSQLPool}/@{pipeline().parameters.Action}?api-version=2019-06-01-preview",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Nothing": "\"Nothing\""
										},
										"body": {
											"value": "@concat('{','}')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "Wait before Continue",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Resume SQL POOL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@pipeline().parameters.WaitTime",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Action": {
						"type": "string",
						"defaultValue": "Resume"
					},
					"WaitTime": {
						"type": "int",
						"defaultValue": 10
					},
					"WaitTimeUntil": {
						"type": "int",
						"defaultValue": 30
					},
					"Synapse_ResourceGroupName": {
						"type": "string",
						"defaultValue": "rg-psmsii-dt-001"
					},
					"SynapseWorkspace": {
						"type": "string",
						"defaultValue": "synpsmsiidt001ws1"
					},
					"SynapseDedicatedSQLPool": {
						"type": "string",
						"defaultValue": "dsqlppsmsiidt01"
					},
					"SubscriptionId": {
						"type": "string",
						"defaultValue": "047cf264-f2a3-43e7-b2e5-1ab1fc225ba1"
					}
				},
				"folder": {
					"name": "PL_TOOL"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-21T14:10:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_UI_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "To create the tables on DWH database based on dwl_copy_table_list table ",
				"activities": [
					{
						"name": "ForEach Table in List",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Table List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Table List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@{concat('select 1 as flag from information_schema.tables where table_schema= ''',item().target_schema_name,''' and table_name=''',item().table_name,'''')}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "DWL_COPY_TABLE_LIST"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('Lookup1').output.value)\n,0,1),1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Create Table",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "SqlDWSink",
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "qtrsqldb",
														"type": "DatasetReference",
														"parameters": {
															"tableName": {
																"value": "@item().table_name",
																"type": "Expression"
															},
															"schemaName": {
																"value": "@item().schema_name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "dsqlp_parametric",
														"type": "DatasetReference",
														"parameters": {
															"schemaName": "@item().target_schema_name",
															"tableName": "@item().table_name"
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Drop and Create Table",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "SqlDWSink",
														"preCopyScript": {
															"value": "@{concat('drop table ',item().target_schema_name,'.',item().table_name)}",
															"type": "Expression"
														},
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "qtrsqldb",
														"type": "DatasetReference",
														"parameters": {
															"tableName": {
																"value": "@item().table_name",
																"type": "Expression"
															},
															"schemaName": {
																"value": "@item().schema_name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "dsqlp_parametric",
														"type": "DatasetReference",
														"parameters": {
															"schemaName": "@item().target_schema_name",
															"tableName": "@item().table_name"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Lookup Table List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select schema_name,table_name, target_schema_name from dwh.DWL_COPY_TABLE_LIST",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "DWL_COPY_TABLE_LIST"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"folder": {
					"name": "PL_TOOL"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-25T14:24:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]",
				"[concat(variables('factoryId'), '/datasets/qtrsqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CSV_TO_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_csv_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IsFileNameCorrect",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lookupFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('lookupFileName').output.value)\n,0,1),1)\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Send E_Mail",
												"type": "WebActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
													"connectVia": {
														"referenceName": "integrationRuntime10min",
														"type": "IntegrationRuntimeReference"
													},
													"method": "POST",
													"headers": {},
													"body": {
														"value": "{\"EmailType\":\"NotExpectedFile\"}",
														"type": "Expression"
													},
													"disableCertValidation": false
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "SP_COPY_FILE_DATA",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dwh].[SP_COPY_FILE_DATA]",
													"storedProcedureParameters": {
														"FILENAME": {
															"value": {
																"value": "$fileName",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_dsqlpqtr",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "lookupFileName",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[DWL_FILE_LIST] where DS_FILENAME= ','''',item().name,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_dwl_file_list",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "truncateStgTransactions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_TRANSACTIONS];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"concurrency": 1,
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:55:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_processing_csv_folder')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions')]",
				"[concat(variables('factoryId'), '/datasets/ds_dwl_file_list')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_dsqlpqtr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CSV_TO_STG_ALLTRANSACTIONS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ls_psmsii_syntodls",
									"type": "LinkedServiceReference"
								},
								"path": "stagingarea"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RationDate",
											"type": "String"
										},
										"sink": {
											"name": "RationDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Group Code",
											"type": "String"
										},
										"sink": {
											"name": "Group Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OperationType",
											"type": "String"
										},
										"sink": {
											"name": "OperationType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supply/Distribution",
											"type": "String"
										},
										"sink": {
											"name": "Supply/Distribution",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FromAccountCR",
											"type": "String"
										},
										"sink": {
											"name": "FromAccountCR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ToAccountCR",
											"type": "String"
										},
										"sink": {
											"name": "ToAccountCR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "String"
										},
										"sink": {
											"name": "Amount",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomDeclarationNo",
											"type": "String"
										},
										"sink": {
											"name": "CustomDeclarationNo",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "dls_processing_csv_copy1",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "All Transactions_copy.csv",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_stg_transactions_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:55:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_processing_csv_copy1')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions_copy1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CSV_TO_STG_with_copysp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_csv_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IsFileNameCorrect",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lookupFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('lookupFileName').output.value)\n,0,1),1)\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Send E_Mail",
												"type": "WebActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
													"connectVia": {
														"referenceName": "integrationRuntime10min",
														"type": "IntegrationRuntimeReference"
													},
													"method": "POST",
													"headers": {},
													"body": {
														"value": "{\"EmailType\":\"NotExpectedFile\"}",
														"type": "Expression"
													},
													"disableCertValidation": false
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "PPL_COPY_SP",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PPL_COPY_SP",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FILENAME": {
															"value": "@item().name",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "lookupFileName",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[DWL_FILE_LIST] where DS_FILENAME= ','''',item().name,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_dwl_file_list",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "truncateStgTransactions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_TRANSACTIONS];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"concurrency": 1,
				"folder": {
					"name": "Dev"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:55:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_processing_csv_folder')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions')]",
				"[concat(variables('factoryId'), '/datasets/ds_dwl_file_list')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]",
				"[concat(variables('factoryId'), '/pipelines/PPL_COPY_SP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CUSTOM_MAIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_CUSTOM_XML_TO_DB",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CUSTOM_XML_TO_DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "PL_CUSTOM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CUSTOM_XML_TO_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CUSTOM_XML_TO_DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_custom_xml_to_db",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"DECLARATION": {
										"schemaName": "dwh",
										"tableName": "STG_CUSTOMS_DEC"
									},
									"ITEM": {
										"schemaName": "dwh",
										"tableName": "STG_CUSTOMS_ITEM"
									},
									"SUPERVISOR": {
										"schemaName": "dwh",
										"tableName": "STG_CUSTOMS_SUPV"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"folder": {
					"name": "PL_CUSTOM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_custom_xml_to_db')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DAILY_MAIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_STG_FILE_LIST_INS",
						"description": "deneme2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_FILE_TRANSFER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STG_FILE_LIST_INS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_FILE_TRANSFER",
						"description": "deneme2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FILE_TRANSFER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DWL_FILE_LIST_UPD",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_STG_FILE_LIST_INS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DWL_FILE_LIST_UPD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_STG_FILE_LIST_UPD",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_STG_FILE_LIST_INS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STG_FILE_LIST_UPD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MAIL_TO_NOTEXISTS",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DWL_FILE_LIST_UPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIL_TO_NOTEXISTS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_CSV_TO_STG",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_STG_FILE_LIST_UPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CSV_TO_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_ERRLOG",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_MAIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_ERRLOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXEC_P_DQ_MAIN",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_CSV_TO_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXEC_P_DQ_MAIN",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_STG_TRANS_TO_TRANSACTION",
						"description": "deneme2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXPORT_AND_EMAIL_ERRLOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STG_TRANS_TO_TRANSACTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DWL_FILE_LIST_ARC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_STG_TRANS_TO_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DWL_FILE_LIST_ARC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"variables": {
					"deneme": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-25T14:24:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_STG_FILE_LIST_INS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_FILE_TRANSFER')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DWL_FILE_LIST_UPD')]",
				"[concat(variables('factoryId'), '/pipelines/PL_STG_FILE_LIST_UPD')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MAIL_TO_NOTEXISTS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CSV_TO_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_EXPORT_AND_EMAIL_ERRLOG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_EXEC_P_DQ_MAIN')]",
				"[concat(variables('factoryId'), '/pipelines/PL_STG_TRANS_TO_TRANSACTION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DWL_FILE_LIST_ARC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DWL_FILE_LIST_ARC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "P_DWL_FILE_LIST_UPD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DWL_FILE_LIST_UPD]"
						},
						"linkedServiceName": {
							"referenceName": "ls_psmsii_syntodsqlp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-25T14:24:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DWL_FILE_LIST_INS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "P_DWL_FILE_LIST_INS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DWL_FILE_LIST_INS]"
						},
						"linkedServiceName": {
							"referenceName": "ls_psmsii_syntodsqlp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-25T14:24:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DWL_FILE_LIST_UPD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Update dwl file list table is expected column",
				"activities": [
					{
						"name": "df_dwl_file_list_upd_notexist",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dwl_file_list_upd_notexist",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dwhfilelist": {},
									"stgfilelist": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_dwl_file_list_upd_exist",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_dwl_file_list_upd_notexist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dwl_file_list_upd_exist",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dwhfilelist": {},
									"stgfilelist": {},
									"sink2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:54:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dwl_file_list_upd_notexist')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]",
				"[concat(variables('factoryId'), '/dataflows/df_dwl_file_list_upd_exist')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXEC_P_DQ_MAIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "P_DQ_MAIN",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dwh].[P_DQ_MAIN]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:52:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXPORT_AND_EMAIL_ERRLOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_transerrlog_to_errlogcontainer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transerrlog_to_errlogcontainer",
								"type": "DataFlowReference",
								"parameters": {
									"p_stg_filename": "STG_FILENAME"
								},
								"datasetParameters": {
									"transactionerrorlog": {},
									"errorlogcsv": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "lapp-qtr-errorlogs-to-entities",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "df_transerrlog_to_errlogcontainer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
							"connectVia": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\"EmailType\":\"TransactionFileErrors\"}",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:55:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transerrlog_to_errlogcontainer')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FILE_TRANSFER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "from upload to processing folder",
				"activities": [
					{
						"name": "fileTransfer",
						"description": "file transfering from upload container to processing container on data lake.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dls_upload_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dls_processing_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:54:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_upload_binary')]",
				"[concat(variables('factoryId'), '/datasets/dls_processing_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIL_TO_NOTEXISTS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Beklediğimiz ama gelmeyen dosyalar için mail gönderimi",
				"activities": [
					{
						"name": "Send E_Mail",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
							"connectVia": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\"EmailType\":\"NotUploadedFile\"}",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:50:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STG_FILE_LIST_INS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Insert file names to stg file list table from processing container ",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_csv_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_stg_file_list",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_stg_file_list_ins",
											"type": "DataFlowReference",
											"parameters": {
												"itemname": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"dummy": {},
												"stgfilelist": {}
											}
										},
										"staging": {},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "None",
										"cacheSinks": {
											"firstRowOnly": true
										}
									}
								}
							]
						}
					},
					{
						"name": "truncateStgTransactions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_FILE_LIST];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-26T14:24:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_processing_csv_folder')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions')]",
				"[concat(variables('factoryId'), '/dataflows/df_stg_file_list_ins')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STG_FILE_LIST_UPD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Stg file list tablosunu update eden pipeline",
				"activities": [
					{
						"name": "df_stg_file_list_upd",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_stg_file_list_upd",
								"type": "DataFlowReference",
								"parameters": {
									"itemname": "toString('CRFR_20210321.csv')"
								},
								"datasetParameters": {
									"dwhfilelist": {},
									"stgfilelistsrc": {},
									"stgfilelisttrgt": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:54:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_stg_file_list_upd')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STG_TRANS_TO_TRANSACTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_TO_TRANSACTIONS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "DWH.P_TRANSACTION_UPD",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "DWB_transactions"
								}
							}
						}
					}
				],
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:52:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STG_TRANS_TO_TRANSACTION_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_transfer_stg_Trans_to_Trans",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transfer_stg_Trans_to_Trans",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {
										"schemaName": "dwh",
										"tableName": "DWB_TRANSACTIONS"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "Dev"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:54:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transfer_stg_Trans_to_Trans')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PPL_COPY_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[SP_COPY_FILE_DATA]",
							"storedProcedureParameters": {
								"FILENAME": {
									"value": {
										"value": "$fileName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"FILENAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dsqlpqtr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run Email Sender LogicApp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run Logic App",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-95.eastus.logic.azure.com:443/workflows/86257f463fb04ebb9c8476a37346b2e2/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=kTjRzjrynRIoJcc_DRhdAMfCiRXjjhfXIzGhEDYt-bM",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{','}')",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "Dev"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:50:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copycommand')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 1
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ls_psmsii_syntodls",
									"type": "LinkedServiceReference"
								},
								"path": "stagingarea"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Transaction Date - تاريخ الحركة ",
											"type": "String"
										},
										"sink": {
											"name": "ID_YEARMONTHDAY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Transaction Type Code - كود نوع الحركة",
											"type": "String"
										},
										"sink": {
											"name": "ID_TRANSACTION_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Item Code - كود الصنف",
											"type": "String"
										},
										"sink": {
											"name": "ID_ITEM_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Item Barcode - باركود الصنف",
											"type": "String"
										},
										"sink": {
											"name": "ID_ITEM_BARCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Your Company CR# - رقم السجل التجارى للشركة",
											"type": "String"
										},
										"sink": {
											"name": "ID_ENTITY_CR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Other Entity CR# - رقم السجل التجارى للطرف الاخر",
											"type": "String"
										},
										"sink": {
											"name": "ID_CUSTOMER_ENTITY_CR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Company Store/Inventory Code - رقم المخزن ",
											"type": "String"
										},
										"sink": {
											"name": "ID_COMPANY_STORE_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity - الكمية",
											"type": "String"
										},
										"sink": {
											"name": "MT_QUANTITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Selling Price per unit - سعر البيع للوحدة  -",
											"type": "String"
										},
										"sink": {
											"name": "MT_DISCOUNT_AMOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Comon Referance No. -  رقم المرجع المشترك",
											"type": "String"
										},
										"sink": {
											"name": "ID_COMMON_REF_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Internal Transfer Number/Code - رقم التحويل الداخلي",
											"type": "String"
										},
										"sink": {
											"name": "ID_TRANSFER_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Number of Consumer Invoices - عدد فواتير البيع للمستهلك",
											"type": "String"
										},
										"sink": {
											"name": "ID_INVOICE_NUMBER",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "dls_processing_csv_copy1",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "24975.csv",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_stg_transactions_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_processing_csv_copy1')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions_copy1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dene_logicapp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "6.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-84.westeurope.logic.azure.com:443/workflows/89e253adeffa4f0c984366954ac4b01b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=3Vo_5LOdMTWWHxFmtF4_ue2uOxYcE-9Kn_FTeV3M8uU",
							"method": "POST",
							"headers": {},
							"body": {
								"EmailType": "NotUploadedFile"
							}
						}
					}
				],
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_errorlog_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "errorlog"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_processing_bin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processing"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_processing_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processing"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_processing_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "csv files under processing container",
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "6-RAYAN NATURAL WATER 9097_PSMS II - Inventory Transactions - Data Collection Sheet.csv"
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "processing"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Transaction Date - تاريخ الحركة ",
						"type": "String"
					},
					{
						"name": "Transaction Type Code - كود نوع الحركة",
						"type": "String"
					},
					{
						"name": "Item Code - كود الصنف",
						"type": "String"
					},
					{
						"name": "Item Barcode - باركود الصنف",
						"type": "String"
					},
					{
						"name": "Your Company CR# - رقم السجل التجارى للشركة",
						"type": "String"
					},
					{
						"name": "Other Entity CR# - رقم السجل التجارى للطرف الاخر",
						"type": "String"
					},
					{
						"name": "Company Store/Inventory Code - رقم المخزن ",
						"type": "String"
					},
					{
						"name": "Quantity - الكمية",
						"type": "String"
					},
					{
						"name": "Selling Price per unit - سعر البيع للوحدة  -",
						"type": "String"
					},
					{
						"name": "Comon Referance No. -  رقم المرجع المشترك",
						"type": "String"
					},
					{
						"name": "Internal Transfer Number/Code - رقم التحويل الداخلي",
						"type": "String"
					},
					{
						"name": "Number of Consumer Invoices - عدد فواتير البيع للمستهلك",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_processing_csv_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "csv files under processing container",
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "6-RAYAN NATURAL WATER 9097_PSMS II - Inventory Transactions - Data Collection Sheet.csv"
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "All Transactions_copy.csv",
							"type": "Expression"
						},
						"fileSystem": "processing"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "RationDate",
						"type": "String"
					},
					{
						"name": "Group Code",
						"type": "String"
					},
					{
						"name": "OperationType",
						"type": "String"
					},
					{
						"name": "Supply/Distribution",
						"type": "String"
					},
					{
						"name": "FromAccountCR",
						"type": "String"
					},
					{
						"name": "ToAccountCR",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "CustomDeclarationNo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_processing_csv_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "csv files under processing container",
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processing"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Transaction Date - تاريخ الحركة ",
						"type": "String"
					},
					{
						"name": "Transaction Type Code - كود نوع الحركة",
						"type": "String"
					},
					{
						"name": "Item Code - كود الصنف",
						"type": "String"
					},
					{
						"name": "Item Barcode - باركود الصنف",
						"type": "String"
					},
					{
						"name": "Your Company CR# - رقم السجل التجارى للشركة",
						"type": "String"
					},
					{
						"name": "Other Entity CR# - رقم السجل التجارى للطرف الاخر",
						"type": "String"
					},
					{
						"name": "Company Store/Inventory Code - رقم المخزن ",
						"type": "String"
					},
					{
						"name": "Quantity - الكمية",
						"type": "String"
					},
					{
						"name": "Selling Price per unit - سعر البيع للوحدة  -",
						"type": "String"
					},
					{
						"name": "Comon Referance No. -  رقم المرجع المشترك",
						"type": "String"
					},
					{
						"name": "Internal Transfer Number/Code - رقم التحويل الداخلي",
						"type": "String"
					},
					{
						"name": "Number of Consumer Invoices - عدد فواتير البيع للمستهلك",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_processing_csv_folder_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "csv files under processing container",
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processing"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TRANSACTION_DATE",
						"type": "String"
					},
					{
						"name": "TRANSACTION_TYPE_CODE",
						"type": "String"
					},
					{
						"name": "ITEM_GROUP",
						"type": "String"
					},
					{
						"name": "ITEM_CODE",
						"type": "String"
					},
					{
						"name": "ITEM_BARCODE",
						"type": "String"
					},
					{
						"name": "COMPANY_CR",
						"type": "String"
					},
					{
						"name": "OTHER_ENTITY_CR",
						"type": "String"
					},
					{
						"name": "STORE_CODE",
						"type": "String"
					},
					{
						"name": "TARGET_STORE_CODE",
						"type": "String"
					},
					{
						"name": "QUANTITY",
						"type": "String"
					},
					{
						"name": "UOM",
						"type": "String"
					},
					{
						"name": "SELLING_PRICE",
						"type": "String"
					},
					{
						"name": "LOCAL_PURCHASE_ORDER",
						"type": "String"
					},
					{
						"name": "SALES_ORDER",
						"type": "String"
					},
					{
						"name": "DELIVER_NOTE_NUMBER",
						"type": "String"
					},
					{
						"name": "GOOD_RECEIVED_NOTE",
						"type": "String"
					},
					{
						"name": "INVOICE_NUMBER",
						"type": "String"
					},
					{
						"name": "RETURN_NOTE_NUMBER",
						"type": "String"
					},
					{
						"name": "CUSTOMER_STATEMENT_NUMBER",
						"type": "String"
					},
					{
						"name": "Internal_Transfer_Number_code",
						"type": "String"
					},
					{
						"name": "NUMBER_OF_INVOICES",
						"type": "String"
					},
					{
						"name": "NOTES",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_processing_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "processing"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Transaction Date - ????? ?????? ",
						"type": "String"
					},
					{
						"name": "Transaction Type Code - ??? ??? ??????",
						"type": "String"
					},
					{
						"name": "Item Group - ???????? ???????",
						"type": "String"
					},
					{
						"name": "Item Code - ??? ?????",
						"type": "String"
					},
					{
						"name": "Item Barcode - ?????? ?????",
						"type": "String"
					},
					{
						"name": "Company CR# - ??? ????? ??????? ??????",
						"type": "String"
					},
					{
						"name": "Other Entity CR# - ??? ????? ??????? ????? ?????",
						"type": "String"
					},
					{
						"name": "Source Store Code - ??? ?????? ??????",
						"type": "String"
					},
					{
						"name": "Target Store Code - ??? ?????? ????????",
						"type": "String"
					},
					{
						"name": "Quantity - ??????",
						"type": "String"
					},
					{
						"name": "UOT - ???? ?????? ",
						"type": "String"
					},
					{
						"name": "Selling Price per unit - ??? ????? ??????  -",
						"type": "String"
					},
					{
						"name": "Local Purchase Order (LPO) No. - ??? ??? ??????",
						"type": "String"
					},
					{
						"name": "Sales Order No. - ??? ??? ?????",
						"type": "String"
					},
					{
						"name": "Delivery Note No. - ??? ????? ???????",
						"type": "String"
					},
					{
						"name": "Goods Received Note (GRN) No. - ??? ????? ????? ??????",
						"type": "String"
					},
					{
						"name": "Invoice No. - ??? ????????",
						"type": "String"
					},
					{
						"name": "Return Note No. - ??? ????? ?????????",
						"type": "String"
					},
					{
						"name": "Customs Statement No. - ??? ???? (???????)",
						"type": "String"
					},
					{
						"name": "Internal Transfer Number/Code - ??? ??????? ???????",
						"type": "String"
					},
					{
						"name": "Number of Consumer Invoices - ??? ?????? ????? ????????",
						"type": "String"
					},
					{
						"name": "Notes or Description -  ????? ?? ???  \r",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_upload_bin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "upload"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_upload_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "deneme",
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "upload"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_custom_xml')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "dene.xml",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"nullValue": "null"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dwh_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DT_FILE",
						"type": "date"
					},
					{
						"name": "DS_ENTITY_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ENTITY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "ID_ISEXPECTED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_EMAIL",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "DWH_FILE_LIST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dwl_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DT_FILE",
						"type": "date"
					},
					{
						"name": "DS_ENTITY_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ENTITY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "ID_ISEXPECTED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_EMAIL",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "DWL_FILE_LIST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "ID_ISEXPECTED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_EMAIL",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_FILE_LIST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_transaction_error_log')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID_YEARMONTHDAY",
						"type": "nvarchar"
					},
					{
						"name": "ID_TRANSACTION_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ITEM_GROUP",
						"type": "nvarchar"
					},
					{
						"name": "ID_ITEM_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ITEM_BARCODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ENTITY_CR",
						"type": "nvarchar"
					},
					{
						"name": "ID_CUSTOMER_ENTITY_CR",
						"type": "nvarchar"
					},
					{
						"name": "ID_SOURCE_WAREHOUSE",
						"type": "nvarchar"
					},
					{
						"name": "ID_TARGET_WAREHOUSE",
						"type": "nvarchar"
					},
					{
						"name": "MT_QUANTITY",
						"type": "nvarchar"
					},
					{
						"name": "ID_UOM",
						"type": "nvarchar"
					},
					{
						"name": "MT_DISCOUNT_AMOUNT",
						"type": "nvarchar"
					},
					{
						"name": "ID_LPO",
						"type": "nvarchar"
					},
					{
						"name": "ID_SALES_ORDER",
						"type": "nvarchar"
					},
					{
						"name": "ID_DELIVERY_NOTE",
						"type": "nvarchar"
					},
					{
						"name": "ID_GRN",
						"type": "nvarchar"
					},
					{
						"name": "ID_INVOICE",
						"type": "nvarchar"
					},
					{
						"name": "ID_RETURN_NOTE",
						"type": "nvarchar"
					},
					{
						"name": "ID_CUSTOMS_STATEMENT",
						"type": "nvarchar"
					},
					{
						"name": "ID_REFERANCE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_TRANSFER_CODE",
						"type": "nvarchar"
					},
					{
						"name": "MT_INVOICE_COUNT",
						"type": "nvarchar"
					},
					{
						"name": "DS_TRANSACTION_REASON",
						"type": "nvarchar"
					},
					{
						"name": "SK_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "STG_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "STG_FILETIME",
						"type": "nvarchar"
					},
					{
						"name": "ID_ERROR_CODE",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "DS_ERROR_CODE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "stg_transaction_error_log"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID_YEARMONTHDAY",
						"type": "nvarchar"
					},
					{
						"name": "ID_TRANSACTION_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ITEM_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ITEM_BARCODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ENTITY_CR",
						"type": "nvarchar"
					},
					{
						"name": "ID_CUSTOMER_ENTITY_CR",
						"type": "nvarchar"
					},
					{
						"name": "ID_COMPANY_STORE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "MT_QUANTITY",
						"type": "nvarchar"
					},
					{
						"name": "MT_DISCOUNT_AMOUNT",
						"type": "nvarchar"
					},
					{
						"name": "ID_COMMON_REF_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_TRANSFER_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_INVOICE_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "SK_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "STG_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "STG_FILETIME",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_TRANSACTIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_transactions_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "RationDate",
						"type": "nvarchar"
					},
					{
						"name": "Group Code",
						"type": "nvarchar"
					},
					{
						"name": "OperationType",
						"type": "nvarchar"
					},
					{
						"name": "Supply/Distribution",
						"type": "nvarchar"
					},
					{
						"name": "FromAccountCR",
						"type": "nvarchar"
					},
					{
						"name": "ToAccountCR",
						"type": "nvarchar"
					},
					{
						"name": "Amount",
						"type": "nvarchar"
					},
					{
						"name": "CustomDeclarationNo",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "ALL_TRANSACTIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsqlp_parametric')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string",
						"defaultValue": "dwh"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "dwb_transactions"
					}
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID_YEARMONTHDAY",
						"type": "nvarchar"
					},
					{
						"name": "ID_TRANSACTION_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ITEM_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ITEM_BARCODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ENTITY_CR",
						"type": "nvarchar"
					},
					{
						"name": "ID_CUSTOMER_ENTITY_CR",
						"type": "nvarchar"
					},
					{
						"name": "ID_COMPANY_STORE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "MT_QUANTITY",
						"type": "nvarchar"
					},
					{
						"name": "MT_DISCOUNT_AMOUNT",
						"type": "nvarchar"
					},
					{
						"name": "ID_COMMON_REF_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_TRANSFER_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ID_INVOICE_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "SK_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "STG_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "STG_FILETIME",
						"type": "nvarchar"
					},
					{
						"name": "ID_STARTDATE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_ENDDATE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_ISCURRENT",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodsqlp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/qtrsqldb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntoobasesql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string",
						"defaultValue": "Products"
					},
					"schemaName": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"folder": {
					"name": "Qtr_SQLdb"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntoobasesql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldb_psmsii_dt_westeu_001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dsqlpqtr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_dsqlpqtr_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime10min",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_psmsii_syntodls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_psmsii_syntodls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_psmsii_syntodls_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime10min",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_psmsii_syntodsqlp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "syn to dedicated sql pool",
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_psmsii_syntodsqlp_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime10min",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_psmsii_syntoobasesql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_psmsii_syntoobasesql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime10min",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_psmsii_syntosql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_psmsii_syntosql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime10min",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_qtrsqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_qtrsqldb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime10min')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 32,
							"timeToLive": 60,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deneme_custom_xml_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Dev"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_psmsii_syntodls",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "sink4"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						}
					],
					"script": "source(output(\n\t\tReleaseNotification as (Declaration as (ItemDetails as (Item as (countryOfOrigin as string, declaredValue as short, declaredValueQAR as short, foreignCurrency as string, hscode as integer, itemQuantity as boolean, itemQuantityUOM as string, netWeight as short, netWeightUOM as string)), SupervisorDetails as (Supervisor as (mobileNumber as string, name as string)[]), accountType as string, address as string, bolNumber as string, cargoManifestNumber as string, carrierName as string, clearingAgencyCR as short, clearingAgencyNameAR as string, clearingAgencyNameEng as string, companyName as string, companyNameAr as string, countryOfLoading as string, declarationNo as string, declarationStatus as string, declarationType as string, email as string, entryOrExitPortName as string, establishmentId as integer, exporterName as string, firstCountryOfLoading as string, importerName as string, masterBolOrAWBNumber as string, portOfLoading as string, portType as string, releaseOrderNumber as long, releasedDate as string, supplierCR as short, supplierCustomsCode as short, voyageOrFlightNumber as string), NotificationDate as string, NotificationRef as string, NotificationSender as string)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'xml',\n\tfileSystem: 'input',\n\tfileName: 'dene.xml',\n\tnullValue: 'null',\n\tvalidationMode: 'xsd',\n\tnamespaces: true,\n\tnamespacePrefixes: ['https://dlsapsmsiidt001.blob.core.windows.net/input/dene.xsd'->'dene.xsd']) ~> source1\nsource1 foldDown(unroll(ReleaseNotification.Declaration.SupervisorDetails.Supervisor),\n\tmapColumn(\n\t\tNotificationSender = ReleaseNotification.NotificationSender,\n\t\tNotificationRef = ReleaseNotification.NotificationRef,\n\t\tNotificationDate = ReleaseNotification.NotificationDate,\n\t\taccountType = ReleaseNotification.Declaration.accountType,\n\t\taddress = ReleaseNotification.Declaration.address,\n\t\tbolNumber = ReleaseNotification.Declaration.bolNumber,\n\t\tcargoManifestNumber = ReleaseNotification.Declaration.cargoManifestNumber,\n\t\tcarrierName = ReleaseNotification.Declaration.carrierName,\n\t\tclearingAgencyCR = ReleaseNotification.Declaration.clearingAgencyCR,\n\t\tclearingAgencyNameAR = ReleaseNotification.Declaration.clearingAgencyNameAR,\n\t\tclearingAgencyNameEng = ReleaseNotification.Declaration.clearingAgencyNameEng,\n\t\tcompanyName = ReleaseNotification.Declaration.companyName,\n\t\tcompanyNameAr = ReleaseNotification.Declaration.companyNameAr,\n\t\tcountryOfLoading = ReleaseNotification.Declaration.countryOfLoading,\n\t\tdeclarationNo = ReleaseNotification.Declaration.declarationNo,\n\t\tdeclarationStatus = ReleaseNotification.Declaration.declarationStatus,\n\t\tdeclarationType = ReleaseNotification.Declaration.declarationType,\n\t\temail = ReleaseNotification.Declaration.email,\n\t\tentryOrExitPortName = ReleaseNotification.Declaration.entryOrExitPortName,\n\t\testablishmentId = ReleaseNotification.Declaration.establishmentId,\n\t\texporterName = ReleaseNotification.Declaration.exporterName,\n\t\tfirstCountryOfLoading = ReleaseNotification.Declaration.firstCountryOfLoading,\n\t\timporterName = ReleaseNotification.Declaration.importerName,\n\t\tmasterBolOrAWBNumber = ReleaseNotification.Declaration.masterBolOrAWBNumber,\n\t\tportOfLoading = ReleaseNotification.Declaration.portOfLoading,\n\t\tportType = ReleaseNotification.Declaration.portType,\n\t\treleaseOrderNumber = ReleaseNotification.Declaration.releaseOrderNumber,\n\t\treleasedDate = ReleaseNotification.Declaration.releasedDate,\n\t\tsupplierCR = ReleaseNotification.Declaration.supplierCR,\n\t\tsupplierCustomsCode = ReleaseNotification.Declaration.supplierCustomsCode,\n\t\tvoyageOrFlightNumber = ReleaseNotification.Declaration.voyageOrFlightNumber,\n\t\tmobileNumber = ReleaseNotification.Declaration.SupervisorDetails.Supervisor.mobileNumber,\n\t\tname = ReleaseNotification.Declaration.SupervisorDetails.Supervisor.name,\n\t\tcountryOfOrigin = ReleaseNotification.Declaration.ItemDetails.Item.countryOfOrigin,\n\t\tdeclaredValue = ReleaseNotification.Declaration.ItemDetails.Item.declaredValue,\n\t\tdeclaredValueQAR = ReleaseNotification.Declaration.ItemDetails.Item.declaredValueQAR,\n\t\tforeignCurrency = ReleaseNotification.Declaration.ItemDetails.Item.foreignCurrency,\n\t\thscode = ReleaseNotification.Declaration.ItemDetails.Item.hscode,\n\t\titemQuantity = ReleaseNotification.Declaration.ItemDetails.Item.itemQuantity,\n\t\titemQuantityUOM = ReleaseNotification.Declaration.ItemDetails.Item.itemQuantityUOM,\n\t\tnetWeight = ReleaseNotification.Declaration.ItemDetails.Item.netWeight,\n\t\tnetWeightUOM = ReleaseNotification.Declaration.ItemDetails.Item.netWeightUOM\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_COMPANY_STORE_CODE as string,\n\t\tMT_QUANTITY as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_COMMON_REF_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tID_INVOICE_NUMBER as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string,\n\t\tID_STARTDATE as integer,\n\t\tID_ENDDATE as integer,\n\t\tID_ISCURRENT as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]",
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_csv_to_stg')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dls_processing_csv",
								"type": "DatasetReference"
							},
							"name": "processingCsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference"
							},
							"name": "stgTransactions"
						}
					],
					"transformations": [
						{
							"name": "AddColumn"
						},
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "parameters{\n\tfileName as string ('4')\n}\nsource(output(\n\t\t{Transaction Date - تاريخ الحركة } as string,\n\t\t{Transaction Type Code - كود نوع الحركة} as string,\n\t\t{Item Code - كود الصنف} as string,\n\t\t{Item Barcode - باركود الصنف} as string,\n\t\t{Your Company CR# - رقم السجل التجارى للشركة} as string,\n\t\t{Other Entity CR# - رقم السجل التجارى للطرف الاخر} as string,\n\t\t{Company Store/Inventory Code - رقم المخزن } as string,\n\t\t{Quantity - الكمية} as string,\n\t\t{Selling Price per unit - سعر البيع للوحدة  -} as string,\n\t\t{Comon Referance No. -  رقم المرجع المشترك} as string,\n\t\t{Internal Transfer Number/Code - رقم التحويل الداخلي} as string,\n\t\t{Number of Consumer Invoices - عدد فواتير البيع للمستهلك} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> processingCsv\nprocessingCsv derive(STG_FILENAME = $fileName,\n\t\tSTG_FILEDATE = left(toString(fromUTC(currentTimestamp(), 'Asia/Istanbul')),19),\n\t\tTRANSACTION_DATE = regexReplace({Transaction Date - تاريخ الحركة },'[^0-9a-zA-Z]+','')) ~> AddColumn\nAddColumn keyGenerate(output(SK_ID_SUR as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_COMPANY_STORE_CODE as string,\n\t\tMT_QUANTITY as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_COMMON_REF_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tID_INVOICE_NUMBER as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tID_YEARMONTHDAY = TRANSACTION_DATE,\n\t\tID_TRANSACTION_TYPE = {Transaction Type Code - كود نوع الحركة},\n\t\tID_ITEM_CODE = {Item Code - كود الصنف},\n\t\tID_ITEM_BARCODE = {Item Barcode - باركود الصنف},\n\t\tID_ENTITY_CR = {Your Company CR# - رقم السجل التجارى للشركة},\n\t\tID_CUSTOMER_ENTITY_CR = {Other Entity CR# - رقم السجل التجارى للطرف الاخر},\n\t\tID_COMPANY_STORE_CODE = {Company Store/Inventory Code - رقم المخزن },\n\t\tMT_QUANTITY = {Quantity - الكمية},\n\t\tMT_DISCOUNT_AMOUNT = {Selling Price per unit - سعر البيع للوحدة  -},\n\t\tID_COMMON_REF_CODE = {Comon Referance No. -  رقم المرجع المشترك},\n\t\tID_TRANSFER_CODE = {Internal Transfer Number/Code - رقم التحويل الداخلي},\n\t\tID_INVOICE_NUMBER = {Number of Consumer Invoices - عدد فواتير البيع للمستهلك},\n\t\tSK_ID = SK_ID_SUR,\n\t\tSTG_FILENAME,\n\t\tSTG_FILETIME = STG_FILEDATE\n\t),\n\tpartitionBy('key',\n\t\t0,\n\t\tID_YEARMONTHDAY\n\t)) ~> stgTransactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_processing_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_csv_to_stg_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dls_processing_csv_copy1",
								"type": "DatasetReference"
							},
							"name": "processingCsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference"
							},
							"name": "AllTransactions"
						}
					],
					"transformations": [
						{
							"name": "AddColumn"
						},
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "parameters{\n\tfileName as string ('4')\n}\nsource(output(\n\t\tRationDate as string,\n\t\t{Group Code} as string,\n\t\tOperationType as string,\n\t\t{Supply/Distribution} as string,\n\t\tAccountCR as string,\n\t\tAmount as string,\n\t\t{Spoiled Quantity} as string,\n\t\tCustomDeclarationNo as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> processingCsv\nprocessingCsv derive(STG_FILENAME = $fileName,\n\t\tSTG_FILEDATE = left(toString(fromUTC(currentTimestamp(), 'Asia/Istanbul')),19)) ~> AddColumn\nAddColumn keyGenerate(output(SK_ID_SUR as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_COMPANY_STORE_CODE as string,\n\t\tMT_QUANTITY as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_COMMON_REF_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tID_INVOICE_NUMBER as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> AllTransactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_processing_csv_copy1')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_custom_xml_to_db')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_psmsii_syntodls",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "DECLARATION"
						},
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "ITEM"
						},
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "SUPERVISOR"
						}
					],
					"transformations": [
						{
							"name": "FlattenSupervisor"
						},
						{
							"name": "FlattenItem"
						}
					],
					"script": "source(output(\n\t\tReleaseNotification as (Declaration as (ItemDetails as (Item as (countryOfOrigin as string, declaredValue as short, declaredValueQAR as short, foreignCurrency as string, hscode as integer, itemQuantity as boolean, itemQuantityUOM as string, netWeight as short, netWeightUOM as string)[]), SupervisorDetails as (Supervisor as (mobileNumber as string, name as string)[]), accountType as string, address as string, bolNumber as string, cargoManifestNumber as string, carrierName as string, clearingAgencyCR as short, clearingAgencyNameAR as string, clearingAgencyNameEng as string, companyName as string, companyNameAr as string, countryOfLoading as string, declarationNo as string, declarationStatus as string, declarationType as string, email as string, entryOrExitPortName as string, establishmentId as integer, exporterName as string, firstCountryOfLoading as string, importerName as string, masterBolOrAWBNumber as string, portOfLoading as string, portType as string, releaseOrderNumber as long, releasedDate as string, supplierCR as short, supplierCustomsCode as short, voyageOrFlightNumber as string), NotificationDate as string, NotificationRef as string, NotificationSender as string)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'xml',\n\tfileSystem: 'input',\n\tfileName: 'dene.xml',\n\tnullValue: 'null',\n\tvalidationMode: 'xsd',\n\tnamespaces: true,\n\tnamespacePrefixes: ['https://dlsapsmsiidt001.blob.core.windows.net/input/dene.xsd'->'dene.xsd']) ~> source1\nsource1 foldDown(unroll(ReleaseNotification.Declaration.SupervisorDetails.Supervisor),\n\tmapColumn(\n\t\tReleaseNotification = ReleaseNotification.NotificationDate,\n\t\tNotificationRef = ReleaseNotification.NotificationRef,\n\t\tNotificationSender = ReleaseNotification.NotificationSender,\n\t\tmobileNumber = ReleaseNotification.Declaration.SupervisorDetails.Supervisor.mobileNumber,\n\t\tname = ReleaseNotification.Declaration.SupervisorDetails.Supervisor.name\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenSupervisor\nsource1 foldDown(unroll(ReleaseNotification.Declaration.ItemDetails.Item),\n\tmapColumn(\n\t\tNotificationSender = ReleaseNotification.NotificationSender,\n\t\tNotificationDate = ReleaseNotification.NotificationDate,\n\t\tNotificationRef = ReleaseNotification.NotificationRef,\n\t\tcountryOfOrigin = ReleaseNotification.Declaration.ItemDetails.Item.countryOfOrigin,\n\t\tdeclaredValue = ReleaseNotification.Declaration.ItemDetails.Item.declaredValue,\n\t\tdeclaredValueQAR = ReleaseNotification.Declaration.ItemDetails.Item.declaredValueQAR,\n\t\tforeignCurrency = ReleaseNotification.Declaration.ItemDetails.Item.foreignCurrency,\n\t\thscode = ReleaseNotification.Declaration.ItemDetails.Item.hscode,\n\t\titemQuantity = ReleaseNotification.Declaration.ItemDetails.Item.itemQuantity,\n\t\titemQuantityUOM = ReleaseNotification.Declaration.ItemDetails.Item.itemQuantityUOM,\n\t\tnetWeight = ReleaseNotification.Declaration.ItemDetails.Item.netWeight,\n\t\tnetWeightUOM = ReleaseNotification.Declaration.ItemDetails.Item.netWeightUOM\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenItem\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_COMPANY_STORE_CODE as string,\n\t\tMT_QUANTITY as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_COMMON_REF_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tID_INVOICE_NUMBER as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string,\n\t\tID_STARTDATE as integer,\n\t\tID_ENDDATE as integer,\n\t\tID_ISCURRENT as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tNotificationSender = ReleaseNotification.NotificationSender,\n\t\tNotificationDate = ReleaseNotification.NotificationDate,\n\t\tNotificationRef = ReleaseNotification.NotificationRef,\n\t\tReleaseNotification = ReleaseNotification.Declaration.accountType,\n\t\taddress = ReleaseNotification.Declaration.address,\n\t\tbolNumber = ReleaseNotification.Declaration.bolNumber,\n\t\tcargoManifestNumber = ReleaseNotification.Declaration.cargoManifestNumber,\n\t\tcarrierName = ReleaseNotification.Declaration.carrierName,\n\t\tclearingAgencyCR = ReleaseNotification.Declaration.clearingAgencyCR,\n\t\tclearingAgencyNameAR = ReleaseNotification.Declaration.clearingAgencyNameAR,\n\t\tclearingAgencyNameEng = ReleaseNotification.Declaration.clearingAgencyNameEng,\n\t\tcompanyName = ReleaseNotification.Declaration.companyName,\n\t\tcompanyNameAr = ReleaseNotification.Declaration.companyNameAr,\n\t\tcountryOfLoading = ReleaseNotification.Declaration.countryOfLoading,\n\t\tdeclarationNo = ReleaseNotification.Declaration.declarationNo,\n\t\tdeclarationStatus = ReleaseNotification.Declaration.declarationStatus,\n\t\tdeclarationType = ReleaseNotification.Declaration.declarationType,\n\t\temail = ReleaseNotification.Declaration.email,\n\t\tentryOrExitPortName = ReleaseNotification.Declaration.entryOrExitPortName,\n\t\testablishmentId = ReleaseNotification.Declaration.establishmentId,\n\t\texporterName = ReleaseNotification.Declaration.exporterName,\n\t\tfirstCountryOfLoading = ReleaseNotification.Declaration.firstCountryOfLoading,\n\t\timporterName = ReleaseNotification.Declaration.importerName,\n\t\tmasterBolOrAWBNumber = ReleaseNotification.Declaration.masterBolOrAWBNumber,\n\t\tportOfLoading = ReleaseNotification.Declaration.portOfLoading,\n\t\tportType = ReleaseNotification.Declaration.portType,\n\t\treleaseOrderNumber = ReleaseNotification.Declaration.releaseOrderNumber,\n\t\treleasedDate = ReleaseNotification.Declaration.releasedDate,\n\t\tsupplierCR = ReleaseNotification.Declaration.supplierCR,\n\t\tsupplierCustomsCode = ReleaseNotification.Declaration.supplierCustomsCode,\n\t\tvoyageOrFlightNumber = ReleaseNotification.Declaration.voyageOrFlightNumber\n\t)) ~> DECLARATION\nFlattenItem sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_COMPANY_STORE_CODE as string,\n\t\tMT_QUANTITY as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_COMMON_REF_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tID_INVOICE_NUMBER as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string,\n\t\tID_STARTDATE as integer,\n\t\tID_ENDDATE as integer,\n\t\tID_ISCURRENT as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ITEM\nFlattenSupervisor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_COMPANY_STORE_CODE as string,\n\t\tMT_QUANTITY as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_COMMON_REF_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tID_INVOICE_NUMBER as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string,\n\t\tID_STARTDATE as integer,\n\t\tID_ENDDATE as integer,\n\t\tID_ISCURRENT as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SUPERVISOR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_psmsii_syntodls')]",
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dwl_file_list_upd_exist')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_dwl_file_list",
								"type": "DatasetReference"
							},
							"name": "dwhfilelist"
						},
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "stgfilelist"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dwl_file_list",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Exists"
						},
						{
							"name": "AlterRow2"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tID as integer,\n\t\tDT_FILE as date,\n\t\tDS_ENTITY_CODE as string,\n\t\tID_ENTITY as integer,\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> dwhfilelist\nsource(output(\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> stgfilelist\ndwhfilelist, stgfilelist exists(dwhfilelist@DS_FILENAME == stgfilelist@DS_FILENAME,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists\nExists alterRow(updateIf(not(isNull(DS_FILENAME)))) ~> AlterRow2\nAlterRow2 derive(ID_ISEXPECTED = 1,\n\t\tDS_EMAIL = 'ali.demir@obase.com') ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID as integer,\n\t\tDT_FILE as date,\n\t\tDS_ENTITY_CODE as string,\n\t\tID_ENTITY as integer,\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['DS_FILENAME'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_dwl_file_list')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_file_list')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dwl_file_list_upd_notexist')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_dwl_file_list",
								"type": "DatasetReference"
							},
							"name": "dwhfilelist"
						},
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "stgfilelist"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dwl_file_list",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "NotExists"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "idisexpected"
						}
					],
					"script": "source(output(\n\t\tID as integer,\n\t\tDT_FILE as date,\n\t\tDS_ENTITY_CODE as string,\n\t\tID_ENTITY as integer,\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> dwhfilelist\nsource(output(\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> stgfilelist\ndwhfilelist, stgfilelist exists(dwhfilelist@DS_FILENAME == stgfilelist@DS_FILENAME,\n\tnegate:true,\n\tbroadcast: 'auto')~> NotExists\nNotExists alterRow(updateIf(not(isNull(DS_FILENAME)))) ~> AlterRow1\nAlterRow1 derive(ID_ISEXPECTED = 0,\n\t\tDS_EMAIL = 'ali.demir@obase.com') ~> idisexpected\nidisexpected sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID as integer,\n\t\tDT_FILE as date,\n\t\tDS_ENTITY_CODE as string,\n\t\tID_ENTITY as integer,\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['DS_FILENAME'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_dwl_file_list')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_file_list')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_stg_file_list_ins')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Stg file list tablosuna containerdaki dosyaları insert eden pipeline",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "dummy"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "stgfilelist"
						}
					],
					"transformations": [
						{
							"name": "itemname"
						}
					],
					"script": "parameters{\n\titemname as string (toString('CRFR_20210321.csv'))\n}\nsource(output(\n\t\tdummy as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select 1 as dummy',\n\tformat: 'query',\n\tstaged: false) ~> dummy\ndummy derive(itemname = $itemname) ~> itemname\nitemname sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDS_FILENAME = itemname\n\t),\n\tpartitionBy('hash', 4,\n\t\tDS_FILENAME\n\t)) ~> stgfilelist"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_file_list')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_stg_file_list_ins_hash_dist')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Stg file list tablosuna containerdaki dosyaları insert eden pipeline",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "dummy"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "stgfilelist"
						}
					],
					"transformations": [
						{
							"name": "itemname"
						}
					],
					"script": "parameters{\n\titemname as string (toString('CRFR_20210321.csv'))\n}\nsource(output(\n\t\tdummy as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select 1 as dummy',\n\tformat: 'query',\n\tstaged: false,\n\tpartitionBy('hash', 2,\n\t\tdummy\n\t)) ~> dummy\ndummy derive(itemname = $itemname) ~> itemname\nitemname sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDS_FILENAME = itemname\n\t),\n\tpartitionBy('hash', 2,\n\t\tDS_FILENAME\n\t)) ~> stgfilelist"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_file_list')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_stg_file_list_upd')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_dwl_file_list",
								"type": "DatasetReference"
							},
							"name": "dwhfilelist"
						},
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "stgfilelistsrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_file_list",
								"type": "DatasetReference"
							},
							"name": "stgfilelisttrgt"
						}
					],
					"transformations": [
						{
							"name": "notExists"
						},
						{
							"name": "idisexpected"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "parameters{\n\titemname as string (toString('CRFR_20210321.csv'))\n}\nsource(output(\n\t\tID as integer,\n\t\tDT_FILE as date,\n\t\tDS_ENTITY_CODE as string,\n\t\tID_ENTITY as integer,\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> dwhfilelist\nsource(output(\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> stgfilelistsrc\nstgfilelistsrc, dwhfilelist exists(stgfilelistsrc@DS_FILENAME == dwhfilelist@DS_FILENAME,\n\tnegate:true,\n\tbroadcast: 'auto')~> notExists\nAlterRow1 derive(ID_ISEXPECTED = 0,\n\t\tDS_EMAIL = 'ali.demir@obase.com') ~> idisexpected\nnotExists alterRow(updateIf(not(isNull(DS_FILENAME)))) ~> AlterRow1\nidisexpected sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDS_FILENAME as string,\n\t\tID_ISEXPECTED as integer,\n\t\tDS_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['DS_FILENAME'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> stgfilelisttrgt"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_dwl_file_list')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_file_list')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transerrlog_to_errlogcontainer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_stg_transaction_error_log",
								"type": "DatasetReference"
							},
							"name": "transactionerrorlog"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dls_errorlog_csv",
								"type": "DatasetReference"
							},
							"name": "errorlogcsv"
						}
					],
					"transformations": [
						{
							"name": "stgfilename"
						}
					],
					"script": "parameters{\n\tp_stg_filename as string (STG_FILENAME)\n}\nsource(output(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_GROUP as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_SOURCE_WAREHOUSE as string,\n\t\tID_TARGET_WAREHOUSE as string,\n\t\tMT_QUANTITY as string,\n\t\tID_UOM as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_LPO as string,\n\t\tID_SALES_ORDER as string,\n\t\tID_DELIVERY_NOTE as string,\n\t\tID_GRN as string,\n\t\tID_INVOICE as string,\n\t\tID_RETURN_NOTE as string,\n\t\tID_CUSTOMS_STATEMENT as string,\n\t\tID_REFERANCE_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tMT_INVOICE_COUNT as string,\n\t\tDS_TRANSACTION_REASON as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string,\n\t\tID_ERROR_CODE as integer,\n\t\tDS_ERROR_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> transactionerrorlog\ntransactionerrorlog derive(STG_FILENAME = replace(STG_FILENAME,'.','_err.')) ~> stgfilename\nstgfilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'STG_FILENAME',\n\tumask: 0777,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tID_YEARMONTHDAY,\n\t\tID_TRANSACTION_TYPE,\n\t\tID_ITEM_GROUP,\n\t\tID_ITEM_CODE,\n\t\tID_ITEM_BARCODE,\n\t\tID_ENTITY_CR,\n\t\tID_CUSTOMER_ENTITY_CR,\n\t\tID_SOURCE_WAREHOUSE,\n\t\tID_TARGET_WAREHOUSE,\n\t\tMT_QUANTITY,\n\t\tID_UOM,\n\t\tMT_DISCOUNT_AMOUNT,\n\t\tID_LPO,\n\t\tID_SALES_ORDER,\n\t\tID_DELIVERY_NOTE,\n\t\tID_GRN,\n\t\tID_INVOICE,\n\t\tID_RETURN_NOTE,\n\t\tID_CUSTOMS_STATEMENT,\n\t\tID_REFERANCE_CODE,\n\t\tID_TRANSFER_CODE,\n\t\tMT_INVOICE_COUNT,\n\t\tDS_TRANSACTION_REASON,\n\t\tID_ERROR_CODE,\n\t\tDS_ERROR_CODE\n\t)) ~> errorlogcsv"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_transaction_error_log')]",
				"[concat(variables('factoryId'), '/datasets/dls_errorlog_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transfer_stg_Trans_to_Trans')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ds_stg_transaction_error_log",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "NotExists1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_GROUP as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_SOURCE_WAREHOUSE as string,\n\t\tID_TARGET_WAREHOUSE as string,\n\t\tMT_QUANTITY as string,\n\t\tID_UOM as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_LPO as string,\n\t\tID_SALES_ORDER as string,\n\t\tID_DELIVERY_NOTE as string,\n\t\tID_GRN as string,\n\t\tID_INVOICE as string,\n\t\tID_RETURN_NOTE as string,\n\t\tID_CUSTOMS_STATEMENT as string,\n\t\tID_REFERANCE_CODE as string,\n\t\tMT_INVOICE_COUNT as string,\n\t\tDS_TRANSACTION_REASON as string,\n\t\tSK_ID as string,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> source1\nsource(output(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_GROUP as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_SOURCE_WAREHOUSE as string,\n\t\tID_TARGET_WAREHOUSE as string,\n\t\tMT_QUANTITY as string,\n\t\tID_UOM as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_LPO as string,\n\t\tID_SALES_ORDER as string,\n\t\tID_DELIVERY_NOTE as string,\n\t\tID_GRN as string,\n\t\tID_INVOICE as string,\n\t\tID_RETURN_NOTE as string,\n\t\tID_CUSTOMS_STATEMENT as string,\n\t\tID_REFERANCE_CODE as string,\n\t\tMT_INVOICE_COUNT as string,\n\t\tDS_TRANSACTION_REASON as string,\n\t\tSK_ID as string,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string,\n\t\tID_ERROR_CODE as integer,\n\t\tDS_ERROR_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> source2\nsource1, source2 exists(source1@SK_ID == source2@SK_ID\n\t&& source1@STG_FILENAME == source2@STG_FILENAME,\n\tnegate:true,\n\tbroadcast: 'auto')~> NotExists1\nNotExists1 derive(NewDate = coalesce(toDate(ID_YEARMONTHDAY,'MM/dd/yyyy'),toDate(ID_YEARMONTHDAY,'yyyy/MM/dd'),toDate(ID_YEARMONTHDAY,'dd/MM/yyyy'),toDate(ID_YEARMONTHDAY,'MMddyyyy'),toDate(ID_YEARMONTHDAY,'yyyyddMM'),toDate(ID_YEARMONTHDAY,'MMddyyyy'),toDate(ID_YEARMONTHDAY,'yyyyMMdd'),toDate(ID_YEARMONTHDAY,'yyyy.MM.dd'),toDate(ID_YEARMONTHDAY,'dd.MM.yyyy'),toDate(ID_YEARMONTHDAY,'MM.dd.yyyy')),\n\t\tNewMTQuantitiy = replace(MT_QUANTITY,',','')) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_YEARMONTHDAY as string,\n\t\tID_TRANSACTION_TYPE as string,\n\t\tID_ITEM_CODE as string,\n\t\tID_ITEM_BARCODE as string,\n\t\tID_ENTITY_CR as string,\n\t\tID_CUSTOMER_ENTITY_CR as string,\n\t\tID_COMPANY_STORE_CODE as string,\n\t\tMT_QUANTITY as string,\n\t\tMT_DISCOUNT_AMOUNT as string,\n\t\tID_COMMON_REF_CODE as string,\n\t\tID_TRANSFER_CODE as string,\n\t\tID_INVOICE_NUMBER as string,\n\t\tSK_ID as integer,\n\t\tSTG_FILENAME as string,\n\t\tSTG_FILETIME as string,\n\t\tID_STARTDATE as integer,\n\t\tID_ENDDATE as integer,\n\t\tID_ISCURRENT as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tID_YEARMONTHDAY = NewDate,\n\t\tID_TRANSACTION_TYPE,\n\t\tID_ITEM_GROUP,\n\t\tID_ITEM_CODE,\n\t\tID_ITEM_BARCODE,\n\t\tID_ENTITY_CR,\n\t\tID_CUSTOMER_ENTITY_CR,\n\t\tID_SOURCE_WAREHOUSE,\n\t\tID_TARGET_WAREHOUSE,\n\t\tMT_QUANTITY = NewMTQuantitiy,\n\t\tID_UOM,\n\t\tMT_DISCOUNT_AMOUNT,\n\t\tID_LPO,\n\t\tID_SALES_ORDER,\n\t\tID_DELIVERY_NOTE,\n\t\tID_GRN,\n\t\tID_INVOICE,\n\t\tID_RETURN_NOTE,\n\t\tID_CUSTOMS_STATEMENT,\n\t\tID_REFERANCE_CODE,\n\t\tMT_INVOICE_COUNT,\n\t\tDS_TRANSACTION_REASON,\n\t\tSK_ID,\n\t\tSTG_FILENAME,\n\t\tSTG_FILETIME\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_transactions')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_transaction_error_log')]",
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/pendp_psmsii_adftodls')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('pendp_psmsii_adftodls_properties_privateLinkResourceId')]",
				"groupId": "[parameters('pendp_psmsii_adftodls_properties_groupId')]",
				"fqdns": "[parameters('pendp_psmsii_adftodls_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/pendp_psmsii_adftodsqlp')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('pendp_psmsii_adftodsqlp_properties_privateLinkResourceId')]",
				"groupId": "[parameters('pendp_psmsii_adftodsqlp_properties_groupId')]",
				"fqdns": "[parameters('pendp_psmsii_adftodsqlp_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}