{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfpsmsiidt001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXPORT_AND_EMAIL_warehouse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_errlogcontainer_warehouse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_errlog_container_warehouse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgwarehouseerrorlog": {
										"schemaName": "dwh",
										"tableName": "STG_WAREHOUSE_ERROR_LOG"
									},
									"errorlogwarehouse": {
										"folderName": "Entity"
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_psmsii_syntodls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "stagingarea"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Coarse"
						}
					},
					{
						"name": "MoveFiles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "df_errlogcontainer_warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": "*_Entity_warehouse_err*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dls_errorlog_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dls_errorlog_binary_parametric",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": "Entity"
								}
							}
						]
					},
					{
						"name": "lapp_qtr_email_warehouse",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MoveFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
							"connectVia": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"EmailType": "WarehouseFileErrors"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/WAREHOUSE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INSERT_COMPANY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_insert_company",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"schemaName": "dwh",
										"tableName": "STG_COMPANY"
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_psmsii_syntodls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "stagingarea"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STG_FILE_LIST_INS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Insert file names to stg file list table from processing container ",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_csv_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_stg_file_list",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_stg_file_list_ins",
											"type": "DataFlowReference",
											"parameters": {
												"itemname": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"dummy": {},
												"stgfilelist": {}
											}
										},
										"staging": {},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "None",
										"cacheSinks": {
											"firstRowOnly": true
										}
									}
								}
							]
						}
					},
					{
						"name": "truncateStgTransactions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [etl].[STG_FILE_LIST];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-26T14:24:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STG_FILE_LIST_UPD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Stg file list tablosunu update eden pipeline",
				"activities": [
					{
						"name": "df_stg_file_list_upd",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_stg_file_list_upd",
								"type": "DataFlowReference",
								"parameters": {
									"itemname": "toString('CRFR_20210321.csv')"
								},
								"datasetParameters": {
									"dwhfilelist": {},
									"stgfilelistsrc": {},
									"stgfilelisttrgt": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_psmsii_syntodls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "stagingarea"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:54:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STG_TRANS_TO_TRANSACTION_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_transfer_stg_Trans_to_Trans",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transfer_stg_Trans_to_Trans",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {
										"schemaName": "dwh",
										"tableName": "DWB_TRANSACTIONS"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dev"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:54:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_xls",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "*.xlsx"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IsFileNameCorrect",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lookupFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('lookupFileName').output.value)\n,0,1),1)\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Send E_Mail",
												"type": "WebActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
													"connectVia": {
														"referenceName": "integrationRuntime10min",
														"type": "IntegrationRuntimeReference"
													},
													"method": "POST",
													"headers": {},
													"body": {
														"value": "{\"EmailType\":\"NotExpectedFile\"}",
														"type": "Expression"
													},
													"disableCertValidation": false
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "df_xlsx_to_stg",
												"type": "ExecuteDataFlow",
												"dependsOn": [],
												"policy": {
													"timeout": "1.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "df_xlsx_to_stg",
														"type": "DataFlowReference",
														"parameters": {
															"fileName": {
																"value": "'@{item().name}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"source1": {
																"FileName": "@item().name"
															},
															"stgTransactions": {}
														}
													},
													"staging": {
														"linkedService": {
															"referenceName": "ls_psmsii_syntodls",
															"type": "LinkedServiceReference"
														},
														"folderPath": "stagingarea"
													},
													"integrationRuntime": {
														"referenceName": "integrationRuntime10min",
														"type": "IntegrationRuntimeReference"
													},
													"traceLevel": "Coarse"
												}
											}
										]
									}
								},
								{
									"name": "lookupFileName",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [etl].[DWL_FILE_LIST] where DS_FILENAME= ','''',item().name,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_dwl_file_list",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:55:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_company')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_xls_parametric",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*",
									"folderName": "Entity",
									"SheetIndex": 0
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_company",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_company",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcompanycontainer": {
													"filename": "@item().name",
													"folderName": "Entity",
													"SheetIndex": 0
												},
												"stgCompany": {}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncateStgCompany",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_COMPANY];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_COMPANY"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/COMPANY"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_contact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_contact_xls",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_contacts",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_contact",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcontactcontainer": {
													"filename": "@item().name"
												},
												"sink1": {}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/CONTACT"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_initial')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_xls",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "*.xlsx"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xlsx_to_stg",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xlsx_to_stg",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"FileName": "@item().name"
												},
												"stgTransactions": {}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-20T12:55:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_items')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_xls_parametric",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*",
									"folderName": "Items",
									"SheetIndex": 0
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgProducts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_items",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_items",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputitemscontainer": {
													"filename": "@item().name",
													"folderName": "Items",
													"SheetIndex": 0
												},
												"stgProducts": {
													"schemaName": "dwh",
													"tableName": "STG_PRODUCTS"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncateStgProducts",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_PRODUCTS];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_PRODUCTS"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ITEMS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_transaction_type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from  container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_xls_parametric",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*",
									"folderName": "TransactionType",
									"SheetIndex": 0
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncatestgCRTransactionType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_transaction_type",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_transaction_type",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"srcTransactionType": {
													"filename": "@item().name",
													"folderName": "TransactionType",
													"SheetIndex": 0
												},
												"stgTransactionType": {
													"schemaName": "dwh",
													"tableName": "STG_CR_TRANSACTION_TYPE_RAW"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncatestgCRTransactionType",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_CR_TRANSACTION_TYPE];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_CR_TRANSACTION_TYPE"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/TRANSACTION_TYPE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_warehouse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgWarehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_warehouse",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_warehouse",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"filename": "@item().name"
												},
												"stgWarehouse": {}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncateStgWarehouse",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_WAREHOUSE];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_WAREHOUSE"
								}
							}
						}
					},
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_warehouse_xls",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/WAREHOUSE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DAILY_MAIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_STG_FILE_LIST_INS",
						"description": "deneme2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_FILE_TRANSFER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STG_FILE_LIST_INS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_FILE_TRANSFER",
						"description": "deneme2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FILE_TRANSFER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DWL_FILE_LIST_UPD",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DWL_FILE_LIST_UPD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_STG_FILE_LIST_UPD",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STG_FILE_LIST_UPD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MAIL_TO_NOTEXISTS",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DWL_FILE_LIST_UPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIL_TO_NOTEXISTS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_CSV_TO_STG",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CSV_TO_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_ERRLOG",
						"description": "deneme",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_MAIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_ERRLOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_LOAD_DWB_TRANSACTION",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXPORT_AND_EMAIL_ERRLOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOAD_DWB_TRANSACTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DWL_FILE_LIST_ARC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_LOAD_DWB_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_MAIL_TO_NOTEXISTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DWL_FILE_LIST_ARC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DWL_FILE_LIST_INS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DWH_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DWL_FILE_LIST_INS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "truncateStgTransactions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_TRANSACTIONS];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PL_XLSX_TO_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "PL_DWL_FILE_LIST_INS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_STG_FILE_LIST_INS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "PL_STOCK_CALCULATE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_LOAD_DWB_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STOCK_CALCULATE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteProcessingFiles",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "PL_CSV_TO_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_XLSX_TO_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_binary",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "PL_COPY_UI_TABLE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_COPY_UI_TABLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXEC_P_DQ_MAIN",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeleteProcessingFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_TRANSACTION]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_DWH_TABLES",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_COPY_UI_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DWH_TABLES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"deneme": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-25T14:24:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_STG_FILE_LIST_INS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_STG_FILE_LIST_UPD')]",
				"[concat(variables('factoryId'), '/pipelines/PL_XLS_TO_STG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DAILY_MAIN_initial')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_FILE_TRANSFER",
						"description": "deneme2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FILE_TRANSFER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_LOAD_DWB_TRANSACTION",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_MAIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOAD_DWB_TRANSACTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "truncateStgTransactions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL_FILE_TRANSFER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_TRANSACTIONS];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PL_STOCK_CALCULATE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_LOAD_DWB_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STOCK_CALCULATE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteProcessingFiles",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "PL_XLS_TO_STG_initial",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_CSV_TO_STG_initial",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_processing_binary",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "PL_EXEC_P_DQ_MAIN",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeleteProcessingFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_TRANSACTION]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_CSV_TO_STG_initial",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CSV_TO_STG_initial",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_XLS_TO_STG_initial",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "truncateStgTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG_initial",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_ERRLOG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_MAIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_ERRLOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"deneme": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PL_MAIN"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-25T14:24:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_XLS_TO_STG_initial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DENE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_EXPORT_AND_EMAIL_tr_type",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_tr_type",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_company')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_XLS_TO_STG_company",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG_company",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "P_DQ_COMPANY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_XLS_TO_STG_company",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_COMPANY]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_company",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_COMPANY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_company",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/COMPANY"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_XLS_TO_STG_company')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_contact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_XLS_TO_STG_contact",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG_contact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "P_DQ_CONTACT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_XLS_TO_STG_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_CONTACT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_contact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_CONTACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_contact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/CONTACT"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_XLS_TO_STG_contact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_entity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_entity_xls",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "truncateStgCompany",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_COMPANY_RAW];\ntruncate table [dwh].[STG_WAREHOUSE_RAW];\ntruncate table [dwh].[STG_CONTACT_RAW];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_COMPANY"
								}
							}
						}
					},
					{
						"name": "ForEachFile_company",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_company",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_company",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcompanycontainer": {
													"filename": "@item().name",
													"folderName": "Entity",
													"SheetIndex": 0
												},
												"stgCompany": {}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_company",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEachFile_company",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_company",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ForEachFile_warehouse",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_warehouse",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_warehouse",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"filename": "@item().name"
												},
												"stgWarehouse": {}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "ForEachFile_contact",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_contacts",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_contact",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcontactcontainer": {
													"filename": "@item().name"
												},
												"sink1": {}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_contact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEachFile_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_contact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_warehouse",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEachFile_warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_warehouse",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SP_STG_VALID_INSERT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_EXPORT_AND_EMAIL_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EXPORT_AND_EMAIL_warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EXPORT_AND_EMAIL_company",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_STG_VALID_INSERT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LookupDsFileName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP_STG_VALID_INSERT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select DISTINCT DS_FILENAME FROM dwh.STG_ENTITY_VALID;\nSELECT 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_entity_valid",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDsFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDsFileName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LookupValid",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[STG_ENTITY_VALID] where DS_FILENAME= ','''',item().ds_filename,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_ENTITY_VALID"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupValid",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('LookupValid').output.value)\n,0,1),1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PL_SP_LOOP_entity",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_SP_LOOP_entity",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_EXPORT_AND_EMAIL_warehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_items')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_XLS_TO_STG_items",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG_items",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXEC_P_DQ_ITEMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_XLS_TO_STG_items",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_PRODUCTS]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_items",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_items",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LookupDsFileName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select DISTINCT DS_FILENAME FROM dwh.STG_PRODUCTS_VALID;\nSELECT 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_products_valid",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDsFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDsFileName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LookupValid",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[STG_PRODUCTS_VALID] where DS_FILENAME= ','''',item().ds_filename,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_PRODUCTS_VALID"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupValid",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('LookupValid').output.value)\n,0,1),1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PL_SP_LOOP_items",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_SP_LOOP_items",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/ITEMS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_XLS_TO_STG_items')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_transaction_type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_XLS_TO_STG_tr_type",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG_transaction_type",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EXEC_P_DQ_TR_TYPE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_XLS_TO_STG_tr_type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_TRANSACTION_TYPE]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_tr_type",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_TR_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_tr_type",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "P_UPSERT_TRANSACTION_TYPE_ERROR_LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_TR_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_UPSERT_TRANSACTION_TYPE_ERROR_LOG]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LookupDsFileName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_TR_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select DISTINCT DS_FILENAME, COMPANYCR FROM dwh.STG_CR_TRANSACTION_TYPE_VALID;\nSELECT 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_cr_transaction_type_valid",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDsFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDsFileName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LookupValid",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[STG_CR_TRANSACTION_TYPE_VALID] where DS_FILENAME= ','''',item().ds_filename,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_CR_TRANSACTION_TYPE_VALID"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupValid",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('LookupValid').output.value)\n,0,1),1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PL_SP_LOOP",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_SP_LOOP",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_INITIAL_LOAD/TRANSACTION_TYPE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_XLS_TO_STG_transaction_type')]"
			]
		}
	]
}