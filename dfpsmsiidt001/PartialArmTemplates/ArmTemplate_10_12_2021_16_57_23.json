{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfpsmsiidt001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_CUSTOM_TO_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetXMLFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_custom_xml",
								"type": "DatasetReference",
								"parameters": {
									"xmlfileName": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetXMLFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetXMLFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy_Dec",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"detectDataType": true,
												"namespaces": true
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['ReleaseNotification']['NotificationSender']"
													},
													"sink": {
														"name": "NotificationSender",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['NotificationRef']"
													},
													"sink": {
														"name": "NotificationRef",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['NotificationDate']"
													},
													"sink": {
														"name": "NotificationDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['declarationNo']"
													},
													"sink": {
														"name": "declarationNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['declarationStatus']"
													},
													"sink": {
														"name": "declarationStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['declarationType']"
													},
													"sink": {
														"name": "declarationType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['releaseOrderNumber']"
													},
													"sink": {
														"name": "releaseOrderNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['releasedDate']"
													},
													"sink": {
														"name": "releasedDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['supplierCR']"
													},
													"sink": {
														"name": "supplierCR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['supplierCustomsCode']"
													},
													"sink": {
														"name": "supplierCustomsCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['countryOfLoading']"
													},
													"sink": {
														"name": "countryOfLoading",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['firstCountryOfLoading']"
													},
													"sink": {
														"name": "firstCountryOfLoading",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['accountType']"
													},
													"sink": {
														"name": "accountType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['companyName']"
													},
													"sink": {
														"name": "companyName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['establishmentId']"
													},
													"sink": {
														"name": "establishmentId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['companyNameAr']"
													},
													"sink": {
														"name": "companyNameAr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['email']"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['address']"
													},
													"sink": {
														"name": "address",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['portType']"
													},
													"sink": {
														"name": "portType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['entryOrExitPortName']"
													},
													"sink": {
														"name": "entryOrExitPortName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['clearingAgencyCR']"
													},
													"sink": {
														"name": "clearingAgencyCR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['clearingAgencyNameEng']"
													},
													"sink": {
														"name": "clearingAgencyNameEng",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['clearingAgencyNameAR']"
													},
													"sink": {
														"name": "clearingAgencyNameAR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['portOfLoading']"
													},
													"sink": {
														"name": "portOfLoading",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['importerName']"
													},
													"sink": {
														"name": "importerName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['exporterName']"
													},
													"sink": {
														"name": "exporterName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['bolNumber']"
													},
													"sink": {
														"name": "bolNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['masterBolOrAWBNumber']"
													},
													"sink": {
														"name": "masterBolOrAWBNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['cargoManifestNumber']"
													},
													"sink": {
														"name": "cargoManifestNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['voyageOrFlightNumber']"
													},
													"sink": {
														"name": "voyageOrFlightNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['carrierName']"
													},
													"sink": {
														"name": "carrierName",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_custom_xml",
											"type": "DatasetReference",
											"parameters": {
												"xmlfileName": "@item().name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_CUSTOMS_DEC"
											}
										}
									]
								},
								{
									"name": "stgcustomsdec",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1\nFROM [dwh].[STG_CUSTOMS_DEC] as SCD\nWHERE \n(\ntry_convert(nvarchar(200), NULLIF([NotificationSender], '''')) IS NULL\nOR try_convert(datetime, NULLIF([NotificationDate], '''')) IS NULL\nOR try_convert(nvarchar(200), NULLIF([NotificationRef], '''')) IS NULL\nOR try_convert(nvarchar(200), NULLIF([bolNumber], '''')) IS NULL\nOR try_convert(nvarchar(200), NULLIF([declarationNo], '''')) IS NULL\nOR try_convert(nvarchar(200), NULLIF([declarationStatus], '''')) IS NULL\nOR try_convert(nvarchar(200), NULLIF([declarationType], '''')) IS NULL\nOR NOT EXISTS (SELECT 1 FROM dwh.STG_CUSTOMS_ITEM AS SCI WHERE sci.declarationNo=SCD.declarationNo)\n)\nAND [NotificationRef] = ','''',activity('Lookup1').output.firstRow.NotificationRef,'''')\n\n\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_stg_customs_dec",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "stgcustomsdec",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('stgcustomsdec').output.value)\n,0,1),0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Web1",
												"type": "WebActivity",
												"dependsOn": [
													{
														"activity": "deletestgcustomsdec",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
													"connectVia": {
														"referenceName": "integrationRuntime10min",
														"type": "IntegrationRuntimeReference"
													},
													"method": "POST",
													"body": {
														"EmailType": "CustomInvalidFile"
													}
												}
											},
											{
												"name": "deletestgcustomsdec",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderQuery": {
															"value": "@concat(' DELETE FROM [dwh].[STG_CUSTOMS_DEC] WHERE [NotificationRef] = ','''',activity('Lookup1').output.firstRow.NotificationRef,''';\nSELECT 1;\nDELETE FROM [dwh].[STG_CUSTOMS_ITEM] WHERE [declarationno] = ','''',activity('Lookup1').output.firstRow.NotificationRef,''';')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_stg_customs_dec",
														"type": "DatasetReference"
													},
													"firstRowOnly": false
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy_Supv",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "XmlSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "XmlReadSettings",
															"validationMode": "none",
															"detectDataType": true,
															"namespaces": true
														}
													},
													"sink": {
														"type": "SqlDWSink",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"path": "[['name']"
																},
																"sink": {
																	"name": "name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"path": "[['mobileNumber']"
																},
																"sink": {
																	"name": "mobileNumber",
																	"type": "String"
																}
															},
															{
																"source": {
																	"path": "$['ReleaseNotification']['Declaration']['declarationNo']"
																},
																"sink": {
																	"name": "declarationNo",
																	"type": "String"
																}
															}
														],
														"collectionReference": "$['ReleaseNotification']['Declaration']['SupervisorDetails']['Supervisor']",
														"mapComplexValuesToString": false
													}
												},
												"inputs": [
													{
														"referenceName": "ds_custom_xml",
														"type": "DatasetReference",
														"parameters": {
															"xmlfileName": "@item().name"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "dsqlp_parametric",
														"type": "DatasetReference",
														"parameters": {
															"schemaName": "dwh",
															"tableName": "STG_CUSTOMS_SUPV"
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy_Item",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Copy_Dec",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_stg_customs_dec",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Copy_Item",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"detectDataType": true,
												"namespaces": true
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['hscode']"
													},
													"sink": {
														"name": "hscode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['itemQuantity']"
													},
													"sink": {
														"name": "itemQuantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['itemQuantityUOM']"
													},
													"sink": {
														"name": "itemQuantityUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['netWeight']"
													},
													"sink": {
														"name": "netWeight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['netWeightUOM']"
													},
													"sink": {
														"name": "netWeightUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['countryOfOrigin']"
													},
													"sink": {
														"name": "countryOfOrigin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['declaredValue']"
													},
													"sink": {
														"name": "declaredValue",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['foreignCurrency']"
													},
													"sink": {
														"name": "foreignCurrency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['declaredValueQAR']"
													},
													"sink": {
														"name": "declaredValueQAR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReleaseNotification']['Declaration']['declarationNo']"
													},
													"sink": {
														"name": "declarationNo",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['ReleaseNotification']['Declaration']['ItemDetails']['Item']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "ds_custom_xml",
											"type": "DatasetReference",
											"parameters": {
												"xmlfileName": "@item().name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_CUSTOMS_ITEM"
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXPORT_AND_EMAIL_contact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_errlog_container_contact",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_errlog_container_contact",
								"type": "DataFlowReference",
								"datasetParameters": {
									"stgcontacterrlog": {
										"schemaName": "dwh",
										"tableName": "STG_CONTACT_ERROR_LOG"
									},
									"errorlogcontact": {
										"folderName": "Entity"
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_psmsii_syntodls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "stagingrea"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Coarse"
						}
					},
					{
						"name": "MoveFiles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "df_errlog_container_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": "*_Entity_contact_err*",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dls_errorlog_binary",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "dls_errorlog_binary_parametric",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": "Entity"
								}
							}
						]
					},
					{
						"name": "lapp_qtr_email_contact",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MoveFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_003/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gfkqhHVGM0XUwIyFoLgEKxzhSohusGVbGzkbginsRcg",
							"connectVia": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"body": {
								"EmailType": "ContactFileErrors"
							}
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/CONTACT"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_errlog_container_contact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_entity_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "P_STG_VALID_INSERT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_EXPORT_AND_EMAIL_company",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EXPORT_AND_EMAIL_warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EXPORT_AND_EMAIL_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_STG_VALID_INSERT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_entity_xls",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_company",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_company",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcompanycontainer": {
													"filename": "@item().name",
													"folderName": "Entity",
													"SheetIndex": 0
												},
												"stgCompany": {
													"schemaName": "dwh",
													"tableName": "STG_COMPANY_RAW"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncateStgTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_COMPANY_RAW];\ntruncate table [dwh].[STG_WAREHOUSE_RAW];\ntruncate table [dwh].[STG_CONTACT_RAW];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_WAREHOUSE"
								}
							}
						}
					},
					{
						"name": "ForEachFile_warehouse",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_warehouse",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_warehouse",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"filename": "@item().name"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "ForEachFile_contact",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_contact",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_contact",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcontactcontainer": {
													"filename": "@item().name"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "P_DQ_COMPANY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_COMPANY]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_company",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_COMPANY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_company",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "P_DQ_WAREHOUSE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachFile_warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_WAREHOUSE]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_warehouse",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_WAREHOUSE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_warehouse",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "P_DQ_CONTACT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachFile_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_CONTACT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_contact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_CONTACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_contact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "LookupDsFileName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "P_STG_VALID_INSERT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select DISTINCT DS_FILENAME FROM dwh.STG_COMPANY_VALID;\nSELECT 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_cr_transaction_type_valid",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDsFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDsFileName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LookupValid",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[STG_COMPANY_VALID] where DS_FILENAME= ','''',item().ds_filename,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_COMPANY_VALID"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupValid",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('LookupValid').output.value)\n,0,1),1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PL_SP_LOOP_entity",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_SP_LOOP_entity",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_EXPORT_AND_EMAIL_contact')]",
				"[concat(variables('factoryId'), '/dataflows/df_xls_to_stg_warehouse')]",
				"[concat(variables('factoryId'), '/dataflows/df_xls_to_stg_contact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_items')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_XLS_TO_STG_items",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG_items",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_EXEC_P_DQ_ITEMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_XLS_TO_STG_items",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_PRODUCTS]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_items",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_items",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "LookupDsFileName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select DISTINCT DS_FILENAME FROM dwh.STG_PRODUCTS_VALID;\nSELECT 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_products_valid",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDsFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDsFileName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LookupValid",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[STG_PRODUCTS_VALID] where DS_FILENAME= ','''',item().ds_filename,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_PRODUCTS_VALID"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupValid",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('LookupValid').output.value)\n,0,1),1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PL_SP_LOOP_items",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_SP_LOOP_items",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ITEMS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_products_valid')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SP_LOOP_items')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SP_LOOP_items')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupColumns",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_products_valid",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LookupInitialLoad",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LookupColumns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select CASE WHEN COUNT(*)=0 THEN 1 ELSE 0 END AS LKP from dwh.DWL_PRODUCTS T1 INNER JOIN DWH.DWL_ENTITY T2\nON T1.ID_COMPANY=T2.ID_ENTITY_ORG WHERE T2.DS_ENTITY_CR = ','''',activity('LookupColumns').output.value[1],'''') ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_dwl_cr_transaction_type",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupInitialLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupColumns').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "UI_StoredProcedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[DwhTransferProduct]",
										"storedProcedureParameters": {
											"Barcode": {
												"value": "",
												"type": "String"
											},
											"BrandNameArabic": {
												"value": "",
												"type": "String"
											},
											"BrandNameEnglish": {
												"value": "",
												"type": "String"
											},
											"CostPrice": {
												"value": "",
												"type": "Decimal"
											},
											"CrNumber": {
												"value": "",
												"type": "String"
											},
											"Depth": {
												"value": "",
												"type": "Decimal"
											},
											"EntityCategoryName1": {
												"value": "",
												"type": "String"
											},
											"EntityCategoryName2": {
												"value": "",
												"type": "String"
											},
											"EntityCategoryName3": {
												"value": "",
												"type": "String"
											},
											"EntityCategoryName4": {
												"value": "",
												"type": "String"
											},
											"Height": {
												"value": "",
												"type": "Decimal"
											},
											"HsCode": {
												"value": "",
												"type": "String"
											},
											"IsInitialLoad": {
												"value": "",
												"type": "Boolean"
											},
											"ItemCode": {
												"value": "",
												"type": "String"
											},
											"OriginCountryISO": {
												"value": "",
												"type": "String"
											},
											"OriginCountryName": {
												"value": "",
												"type": "String"
											},
											"ProductDescriptionArabic": {
												"value": "",
												"type": "String"
											},
											"ProductDescriptionEnglish": {
												"value": "",
												"type": "String"
											},
											"ProductGroupName": {
												"value": "",
												"type": "String"
											},
											"ProductNameArabic": {
												"value": "",
												"type": "String"
											},
											"ProductNameEnglish": {
												"value": "",
												"type": "String"
											},
											"SellingPrice": {
												"value": "",
												"type": "Decimal"
											},
											"SupplierCrNumber": {
												"value": "",
												"type": "String"
											},
											"SupplierName": {
												"value": "",
												"type": "String"
											},
											"UnitItemBarcode": {
												"value": "",
												"type": "String"
											},
											"UnitOfItemNumber": {
												"value": "",
												"type": "Decimal"
											},
											"UnitOfMeasure": {
												"value": "",
												"type": "String"
											},
											"UnitOfMeasurePackage": {
												"value": "",
												"type": "String"
											},
											"UnitWeightSize": {
												"value": "",
												"type": "Decimal"
											},
											"Width": {
												"value": "",
												"type": "Decimal"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_qtrsqldb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ITEMS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_products_valid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_transaction_type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from  container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_xls_parametric",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*",
									"folderName": "TransactionType",
									"SheetIndex": 0
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncatestgCRTransactionType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_transaction_type",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_transaction_type",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"srcTransactionType": {
													"filename": "@item().name",
													"folderName": "TransactionType",
													"SheetIndex": 0
												},
												"stgTransactionType": {
													"schemaName": "dwh",
													"tableName": "STG_CR_TRANSACTION_TYPE_RAW"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncatestgCRTransactionType",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_CR_TRANSACTION_TYPE];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_CR_TRANSACTION_TYPE"
								}
							}
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/TRANSACTION_TYPE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_contact_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SEQ",
						"type": "nvarchar"
					},
					{
						"name": "NAME",
						"type": "nvarchar"
					},
					{
						"name": "EMAIL",
						"type": "nvarchar"
					},
					{
						"name": "PHONE",
						"type": "nvarchar"
					},
					{
						"name": "EXTENSION",
						"type": "nvarchar"
					},
					{
						"name": "MOBILE",
						"type": "nvarchar"
					},
					{
						"name": "ENTITYCR",
						"type": "nvarchar"
					},
					{
						"name": "ID_SK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "DT_FILETIME",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_CONTACT_RAW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_products_valid')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ITEMCODE",
						"type": "nvarchar"
					},
					{
						"name": "BARCODE",
						"type": "nvarchar"
					},
					{
						"name": "PRODUCTNAMEARABIC",
						"type": "nvarchar"
					},
					{
						"name": "DESCRIPTIONARABIC",
						"type": "nvarchar"
					},
					{
						"name": "PRODUCTNAMEENGLISH",
						"type": "nvarchar"
					},
					{
						"name": "DESCRIPTIONENGLISH",
						"type": "nvarchar"
					},
					{
						"name": "UNITITEMBARCODE",
						"type": "nvarchar"
					},
					{
						"name": "NOOFUNITITEMS",
						"type": "nvarchar"
					},
					{
						"name": "UNITWEIGHTSIZE",
						"type": "nvarchar"
					},
					{
						"name": "UNITUOM",
						"type": "nvarchar"
					},
					{
						"name": "PACKAGEUOM",
						"type": "nvarchar"
					},
					{
						"name": "COSTPRICE",
						"type": "nvarchar"
					},
					{
						"name": "SELLINGPRICE",
						"type": "nvarchar"
					},
					{
						"name": "BRANDTRADEMARKENGLISH",
						"type": "nvarchar"
					},
					{
						"name": "BRANDTRADEMARKARABIC",
						"type": "nvarchar"
					},
					{
						"name": "MOCIPRODUCTGROUP",
						"type": "nvarchar"
					},
					{
						"name": "COUNTRYOFORAGENNAME",
						"type": "nvarchar"
					},
					{
						"name": "COUNTRYOFORAGENISO",
						"type": "nvarchar"
					},
					{
						"name": "HSCODE",
						"type": "nvarchar"
					},
					{
						"name": "SUPPLIERCR",
						"type": "nvarchar"
					},
					{
						"name": "SUPPLIERNAME",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL11",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL12",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL13",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL14",
						"type": "nvarchar"
					},
					{
						"name": "WIDTH",
						"type": "nvarchar"
					},
					{
						"name": "HEIGHT",
						"type": "nvarchar"
					},
					{
						"name": "DEPTH",
						"type": "nvarchar"
					},
					{
						"name": "ID_SK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "DT_FILETIME",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DT_CREATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DT_UPDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_PRODUCTS_VALID"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_warehouse_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STORECODE",
						"type": "nvarchar"
					},
					{
						"name": "ENTITYCOMMERCIALREGISTRATIONNO",
						"type": "nvarchar"
					},
					{
						"name": "ENTITYCOMMERCIALLICENSENO",
						"type": "nvarchar"
					},
					{
						"name": "WAREHOUSESTORECOMMERCIALREGISTRATIONNO",
						"type": "nvarchar"
					},
					{
						"name": "WAREHOUSESTORECOMMERCIALLICENSENO",
						"type": "nvarchar"
					},
					{
						"name": "WAREHOUSESTORECODE",
						"type": "nvarchar"
					},
					{
						"name": "AREANAME",
						"type": "nvarchar"
					},
					{
						"name": "STNAME",
						"type": "nvarchar"
					},
					{
						"name": "AREACODE",
						"type": "nvarchar"
					},
					{
						"name": "STNO",
						"type": "nvarchar"
					},
					{
						"name": "BUILDINGID",
						"type": "nvarchar"
					},
					{
						"name": "MAPLOCATIONURL",
						"type": "nvarchar"
					},
					{
						"name": "TOTALSTOREAREAM2",
						"type": "nvarchar"
					},
					{
						"name": "STORAGECAPACITYINTON",
						"type": "nvarchar"
					},
					{
						"name": "STORAGETYPE",
						"type": "nvarchar"
					},
					{
						"name": "ID_SK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "DT_FILETIME",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_WAREHOUSE_RAW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_errlog_container_company')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "stgcompanyerrorlog"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dls_errorlog_parametric",
								"type": "DatasetReference"
							},
							"name": "errorlogcompany"
						}
					],
					"transformations": [
						{
							"name": "dsfilename"
						}
					],
					"script": "source(output(\n\t\tMainorBranch as string,\n\t\tCompanyNameArabic as string,\n\t\tCompanyNameEnglish as string,\n\t\tCommercialRegistrationNo as string,\n\t\tCommercialLicensenumber as string,\n\t\tArea as string,\n\t\tStreetName as string,\n\t\tAreaNumber as string,\n\t\tStreetNumber2 as string,\n\t\tBuildingNumber as string,\n\t\tPhoneNumber as string,\n\t\tFax as string,\n\t\t{P.O.Box} as string,\n\t\tEmail as string,\n\t\tWebsite as string,\n\t\tMapLocationUrl as string,\n\t\tID_SK as integer,\n\t\tDS_FILENAME as string,\n\t\tDT_FILETIME as timestamp,\n\t\tID_ERROR_CODE as integer,\n\t\tDS_ERROR_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: true) ~> stgcompanyerrorlog\nstgcompanyerrorlog derive(DS_FILENAME = replace((replace(DS_FILENAME,'.xlsx','_company_err.csv')),'.xls','_company_err.csv')) ~> dsfilename\ndsfilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'DS_FILENAME',\n\tumask: 0777,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tMainorBranch,\n\t\tCompanyNameArabic,\n\t\tCompanyNameEnglish,\n\t\tCommercialRegistrationNo,\n\t\tCommercialLicensenumber,\n\t\tArea,\n\t\tStreetName,\n\t\tAreaNumber,\n\t\tStreetNumber2,\n\t\tBuildingNumber,\n\t\tPhoneNumber,\n\t\tFax,\n\t\tBox = {P.O.Box},\n\t\tEmail,\n\t\tWebsite,\n\t\tMapLocationUrl,\n\t\tDS_ERROR_CODE\n\t)) ~> errorlogcompany"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_errlog_container_contact')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "stgcontacterrlog"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dls_errorlog_parametric",
								"type": "DatasetReference"
							},
							"name": "errorlogcontact"
						}
					],
					"transformations": [
						{
							"name": "dsfilename"
						}
					],
					"script": "source(output(\n\t\tSEQ as string,\n\t\tNAME as string,\n\t\tEMAIL as string,\n\t\tPHONE as string,\n\t\tEXTENSION as string,\n\t\tMOBILE as string,\n\t\tENTITYCR as string,\n\t\tID_SK as integer,\n\t\tDS_FILENAME as string,\n\t\tDT_FILETIME as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: true) ~> stgcontacterrlog\nstgcontacterrlog derive(DS_FILENAME = replace((replace(DS_FILENAME,'.xlsx','_err.csv')),'.xls','_err.csv')) ~> dsfilename\ndsfilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'DS_FILENAME',\n\ttruncate: true,\n\tumask: 0777,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tSEQ,\n\t\tNAME,\n\t\tEMAIL,\n\t\tPHONE,\n\t\tEXTENSION,\n\t\tMOBILE,\n\t\tENTITYCR,\n\t\tID_SK,\n\t\tDS_FILENAME,\n\t\tDT_FILETIME\n\t)) ~> errorlogcontact"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_errlog_container_warehouse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference"
							},
							"name": "stgwarehouseerrorlog"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dls_errorlog_parametric",
								"type": "DatasetReference"
							},
							"name": "errorlogwarehouse"
						}
					],
					"transformations": [
						{
							"name": "dsfilename"
						}
					],
					"script": "source(output(\n\t\tSTORECODE as string,\n\t\tENTITYCOMMERCIALREGISTRATIONNO as string,\n\t\tENTITYCOMMERCIALLICENSENO as string,\n\t\tWAREHOUSESTORECOMMERCIALREGISTRATIONNO as string,\n\t\tWAREHOUSESTORECOMMERCIALLICENSENO as string,\n\t\tWAREHOUSESTORECODE as string,\n\t\tAREANAME as string,\n\t\tSTNAME as string,\n\t\tAREACODE as string,\n\t\tSTNO as string,\n\t\tBUILDINGID as string,\n\t\tMAPLOCATIONURL as string,\n\t\tTOTALSTOREAREAM2 as string,\n\t\tSTORAGECAPACITYINTON as string,\n\t\tSTORAGETYPE as string,\n\t\tID_SK as integer,\n\t\tDS_FILENAME as string,\n\t\tDT_FILETIME as timestamp,\n\t\tID_ERROR_CODE as integer,\n\t\tDS_ERROR_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: true) ~> stgwarehouseerrorlog\nstgwarehouseerrorlog derive(DS_FILENAME = replace((replace(DS_FILENAME,'.xlsx','_warehouse_err.csv')),'.xls','_warehouse_err.csv')) ~> dsfilename\ndsfilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'DS_FILENAME',\n\tumask: 0777,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tSTORECODE,\n\t\tENTITYCOMMERCIALREGISTRATIONNO,\n\t\tENTITYCOMMERCIALLICENSENO,\n\t\tWAREHOUSESTORECOMMERCIALREGISTRATIONNO,\n\t\tWAREHOUSESTORECOMMERCIALLICENSENO,\n\t\tWAREHOUSESTORECODE,\n\t\tAREANAME,\n\t\tSTNAME,\n\t\tAREACODE,\n\t\tSTNO,\n\t\tBUILDINGID,\n\t\tMAPLOCATIONURL,\n\t\tTOTALSTOREAREAM2,\n\t\tSTORAGECAPACITYINTON,\n\t\tSTORAGETYPE,\n\t\tDS_ERROR_CODE\n\t)) ~> errorlogwarehouse"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_xls_to_stg_contact')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dls_input_contact_xls",
								"type": "DatasetReference"
							},
							"name": "inputcontactcontainer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_contact_raw",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AddColumn"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "parameters{\n\tfileName as string ('22071_Entity.xlsx')\n}\nsource(output(\n\t\t{Seq-مسلسل} as string,\n\t\t{Name-الاسم} as string,\n\t\t{eMail- البريد الالكترونى} as string,\n\t\t{Phone-الهاتف} as string,\n\t\t{Extension-التحويلة} as string,\n\t\t{Mobile-الموبايل} as string,\n\t\t{Entity CR-رقم السجل التجارى} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputcontactcontainer\nFilter1 derive(DS_FILENAME = $fileName,\n\t\tDT_FILETIME = left(toString(fromUTC(currentTimestamp(), 'Asia/Istanbul')),19)) ~> AddColumn\nAddColumn keyGenerate(output(ID_SK as long),\n\tstartAt: 1L) ~> SurrogateKey1\ninputcontactcontainer select(mapColumn(\n\t\teach(match(true()),\n\t\t\tregexReplace($$,'[^0-9a-zA-Z]','') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(isNull(iifNull(iifNull(EntityCR,Name,eMail),iifNull(Phone,Extension,Mobile))) != true()) ~> Filter1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSEQ as string,\n\t\tNAME as string,\n\t\tEMAIL as string,\n\t\tPHONE as string,\n\t\tEXTENSION as string,\n\t\tMOBILE as string,\n\t\tENTITYCR as string,\n\t\tID_SK as integer,\n\t\tDS_FILENAME as string,\n\t\tDT_FILETIME as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSEQ = Seq,\n\t\tNAME = Name,\n\t\tEMAIL = eMail,\n\t\tPHONE = Phone,\n\t\tEXTENSION = Extension,\n\t\tMOBILE = Mobile,\n\t\tENTITYCR = EntityCR,\n\t\tID_SK,\n\t\tDS_FILENAME,\n\t\tDT_FILETIME\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_contact_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_xls_to_stg_warehouse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dls_input_warehouse_xls",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_warehouse_raw",
								"type": "DatasetReference"
							},
							"name": "stgWarehouse"
						}
					],
					"transformations": [
						{
							"name": "AddColumn"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "parameters{\n\tfileName as string ('a')\n}\nsource(output(\n\t\t{Store Code-رقم المخزن} as string,\n\t\t{Entity Commercial Registration No-رقم السجل التجارى للشركة} as string,\n\t\t{Entity Commercial License No-رقم الرخصة التجارىة للشركة} as string,\n\t\t{Warehouse/Store Commercial Registration No-رقم السجل التجارى للمخزن} as string,\n\t\t{Warehouse/Store Commercial License No-رقم الرخصة التجارىة للمخزن} as string,\n\t\t{Warehouse/Store Code-رقم المخزن} as string,\n\t\t{Area Name-اسم المنطقة} as string,\n\t\t{St. Name-اسم الشارع } as string,\n\t\t{Area Code-رقم المنطقة} as string,\n\t\t{St. No-رقم الشارع} as string,\n\t\t{Building ID-رقم البناية } as string,\n\t\t{Map Location URL-الخريطه} as string,\n\t\t{Total Store Area M2-اجمالى المساحة متر مربع} as string,\n\t\t{Storage Capacity in TON-السعة التخزينية بالطن} as string,\n\t\t{Storage Type-نوع التخزين} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nFilter1 derive(DS_FILENAME = $fileName,\n\t\tDT_FILETIME = left(toString(fromUTC(currentTimestamp(), 'Asia/Istanbul')),19)) ~> AddColumn\nAddColumn keyGenerate(output(ID_SK as long),\n\tstartAt: 1L) ~> SurrogateKey1\nsource1 select(mapColumn(\n\t\teach(match(true()),\n\t\t\tregexReplace($$,'[^0-9a-zA-Z]','') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(isNull(iifNull(iifNull(StoreCode,EntityCommercialRegistrationNo,EntityCommercialLicenseNo),iifNull(WarehouseStoreCommercialRegistrationNo,WarehouseStoreCommercialLicenseNo,WarehouseStoreCode),iifNull(iifNull(AreaName,StName,AreaCode),\niifNull(StNo,BuildingID,MapLocationURL),iifNull(TotalStoreAreaM2,StorageCapacityinTON,StorageType))))!= true()) ~> Filter1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSTORECODE as string,\n\t\tENTITYCOMMERCIALREGISTRATIONNO as string,\n\t\tENTITYCOMMERCIALLICENSENO as string,\n\t\tWAREHOUSESTORECOMMERCIALREGISTRATIONNO as string,\n\t\tWAREHOUSESTORECOMMERCIALLICENSENO as string,\n\t\tWAREHOUSESTORECODE as string,\n\t\tAREANAME as string,\n\t\tSTNAME as string,\n\t\tAREACODE as string,\n\t\tSTNO as string,\n\t\tBUILDINGID as string,\n\t\tMAPLOCATIONURL as string,\n\t\tTOTALSTOREAREAM2 as string,\n\t\tSTORAGECAPACITYINTON as string,\n\t\tSTORAGETYPE as string,\n\t\tID_SK as integer,\n\t\tDS_FILENAME as string,\n\t\tDT_FILETIME as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSTORECODE = StoreCode,\n\t\tENTITYCOMMERCIALREGISTRATIONNO = EntityCommercialRegistrationNo,\n\t\tENTITYCOMMERCIALLICENSENO = EntityCommercialLicenseNo,\n\t\tWAREHOUSESTORECOMMERCIALREGISTRATIONNO = WarehouseStoreCommercialRegistrationNo,\n\t\tWAREHOUSESTORECOMMERCIALLICENSENO = WarehouseStoreCommercialLicenseNo,\n\t\tWAREHOUSESTORECODE = WarehouseStoreCode,\n\t\tAREANAME = AreaName,\n\t\tSTNAME = StName,\n\t\tAREACODE = AreaCode,\n\t\tSTNO = StNo,\n\t\tBUILDINGID = BuildingID,\n\t\tMAPLOCATIONURL = MapLocationURL,\n\t\tTOTALSTOREAREAM2 = TotalStoreAreaM2,\n\t\tSTORAGECAPACITYINTON = StorageCapacityinTON,\n\t\tSTORAGETYPE = StorageType,\n\t\tID_SK,\n\t\tDS_FILENAME,\n\t\tDT_FILETIME\n\t)) ~> stgWarehouse"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_warehouse_raw')]"
			]
		}
	]
}