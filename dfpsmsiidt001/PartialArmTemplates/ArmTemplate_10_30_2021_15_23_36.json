{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfpsmsiidt001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_BSS_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromBSS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_CUSTOMS_DEC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_CUSTOMS_DEC').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Execute PL_BSS_CHILD_SERVICE_CALL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BSS_CHILD_SERVICE_CALL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CR_Number": {
												"value": "@item().DS_SUPPLIER_CR",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "LKP_CUSTOMS_DEC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT\nDS_SUPPLIER_CR\nFROM [dwh].[DWL_CUSTOMS_DECLARATION] WHERE FLG_SUPPLIER_CHECK=1\nAND DS_SUPPLIER_CR IS NOT NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "DWL_CUSTOMS_DECLARATION"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "16070_registration.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"folder": {
					"name": "PL_CUSTOM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_BSS_Files_Folder')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BSS_CHILD_SERVICE_CALL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BSS_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromBSS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_CUSTOMS_DEC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_CUSTOMS_DEC').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Registration",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "MainCRNumber",
													"value": {
														"value": "@item().DS_SUPPLIER_CR",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": "Content-Type: text/xml;charset=UTF-8\nSOAPAction: \"http://mec.gov.qa/BSS/soa/OnePrimaryEstablishment/StartServiceCommercialRegistration\"",
												"requestBody": {
													"value": "@{replace('<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:onep=\"http://mec.gov.qa/BSS/soa/OnePrimaryEstablishment\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <onep:GetCommercialRegistrationInfoRequest_Input>\n         <onep:commercialRegistrationCode>?paramCR</onep:commercialRegistrationCode>\n         <onep:RefNumber></onep:RefNumber>\n      </onep:GetCommercialRegistrationInfoRequest_Input>\n   </soapenv:Body>\n</soapenv:Envelope>','?paramCR',item().DS_SUPPLIER_CR)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['ns0:serialNumber']"
													},
													"sink": {
														"name": "BRANCH_CR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ns0:statuses']['ns0:code']"
													},
													"sink": {
														"name": "BRANCH_STATUS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['MainCRNumber']"
													},
													"sink": {
														"name": "MainCRNumber",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['env:Envelope']['env:Body']['GetCommercialRegistrationInfoResponse_Output']['ns0:commercialRegistration']['ns0:branches']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "BSS_Dataset",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "BSS_Registration_DS",
											"type": "DatasetReference",
											"parameters": {
												"dsparamFileName": {
													"value": "@concat(item().DS_SUPPLIER_CR,'_regtemp.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LKP_CUSTOMS_DEC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT\nDS_SUPPLIER_CR\nFROM [dwh].[DWL_CUSTOMS_DECLARATION] WHERE FLG_SUPPLIER_CHECK=1\nAND DS_SUPPLIER_CR IS NOT NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "DWL_CUSTOMS_DECLARATION"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CopyFromBSS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_BSS_Registiration_Process",
								"type": "DataFlowReference"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "BSS_Source_CR_List.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Registration Call",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "MainCRNumber",
													"value": {
														"value": "@item().MainCRNumber",
														"type": "Expression"
													}
												},
												{
													"name": "CRNumber",
													"value": {
														"value": "@item().BRANCH_CR",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": "Content-Type: text/xml;charset=UTF-8\nSOAPAction: \"http://mec.gov.qa/BSS/soa/OnePrimaryEstablishment/StartServiceCommercialRegistration\"",
												"requestBody": {
													"value": "@{replace('<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:onep=\"http://mec.gov.qa/BSS/soa/OnePrimaryEstablishment\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <onep:GetCommercialRegistrationInfoRequest_Input>\n         <onep:commercialRegistrationCode>?paramCR</onep:commercialRegistrationCode>\n         <onep:RefNumber></onep:RefNumber>\n      </onep:GetCommercialRegistrationInfoRequest_Input>\n   </soapenv:Body>\n</soapenv:Envelope>','?paramCR',item().BRANCH_CR)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialRegistrationInfoResponse_Output']['ns0:commercialRegistration']['ns0:addressPOBox']"
													},
													"sink": {
														"name": "POBox",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialRegistrationInfoResponse_Output']['ns0:commercialRegistration']['ns0:telephone']"
													},
													"sink": {
														"name": "Telephone",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['MainCRNumber']"
													},
													"sink": {
														"name": "MainCRNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['CRNumber']"
													},
													"sink": {
														"name": "CRNumber",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "BSS_Dataset",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "BSS_Registration_DS",
											"type": "DatasetReference",
											"parameters": {
												"dsparamFileName": {
													"value": "@concat(replace(item().BRANCH_CR,'/','-'),'_registration.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Permit-Entity Main Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "CRNumber_Key",
													"value": {
														"value": "@item().BRANCH_CR",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": "Content-Type: text/xml;charset=UTF-8\nSOAPAction: \"http://mec.gov.qa/BSS/soa/OnePrimaryEstablishment/StartServiceCommercialPermit\"",
												"requestBody": {
													"value": "@{replace('<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soap:Body>\n        <ns1:GetCommercialPermitInfoRequest_Input xmlns:ns1=\"http://mec.gov.qa/BSS/soa/OnePrimaryEstablishment\">\n            <ns1:commercialPermitID></ns1:commercialPermitID>\n            <ns1:commercialRegistration>\n                <ns1:ID>?paramCR</ns1:ID>\n                <ns1:branchNumber></ns1:branchNumber>\n            </ns1:commercialRegistration>\n            <ns1:RefNumber></ns1:RefNumber>\n        </ns1:GetCommercialPermitInfoRequest_Input>\n    </soap:Body>\n</soap:Envelope>','?paramCR',item().BRANCH_CR)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"detectDataType": false,
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:commercialRegistration']['ns0:ID']"
													},
													"sink": {
														"name": "CRNUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:commercialRegistration']['ns0:branchNumber']"
													},
													"sink": {
														"name": "BRANCHNUMBER",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:establishmentCommercialName']['ns0:nameArabic']"
													},
													"sink": {
														"name": "COMPANY_ARB",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:establishmentCommercialName']['ns0:nameEnglish']"
													},
													"sink": {
														"name": "COMPANY_ENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:municipalityName']['ns0:nameArabic']"
													},
													"sink": {
														"name": "MUNICIPALITY_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:street']['ns0:number']"
													},
													"sink": {
														"name": "STREET_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:street']['ns0:name']['ns0:nameArabic']"
													},
													"sink": {
														"name": "STREET_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:zone']['ns0:number']"
													},
													"sink": {
														"name": "ZONE_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:zone']['ns0:name']['ns0:nameEnglish']"
													},
													"sink": {
														"name": "ZONE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:managerQID']"
													},
													"sink": {
														"name": "MANAGER_QID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:managerName']"
													},
													"sink": {
														"name": "MANAGER_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['CRNumber_Key']"
													},
													"sink": {
														"name": "CRNumber_Key",
														"type": "String"
													}
												}
											],
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "BSS_Dataset",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "BSS_Permit_DS",
											"type": "DatasetReference",
											"parameters": {
												"dsparamFileName": {
													"value": "@concat(replace(item().BRANCH_CR,'/','-'),'_permit.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_BSS_Registiration_Process_copy1",
								"type": "DataFlowReference"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_BSS_Registiration_Process_copy2",
								"type": "DataFlowReference"
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_psmsii_syntodls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "stagingarea"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "PL_CUSTOM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_BSS_Registiration_Process')]",
				"[concat(variables('factoryId'), '/datasets/ds_BSS_Files_Folder')]",
				"[concat(variables('factoryId'), '/dataflows/df_BSS_Registiration_Process_copy1')]",
				"[concat(variables('factoryId'), '/dataflows/df_BSS_Registiration_Process_copy2')]",
				"[concat(variables('factoryId'), '/datasets/BSS_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/BSS_Registration_DS')]",
				"[concat(variables('factoryId'), '/datasets/BSS_Permit_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BSS_CHILD_SERVICE_CALL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Permit-Entity Main Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": false,
									"namespaces": true
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:commercialRegistration']['ns0:ID']"
										},
										"sink": {
											"name": "CRNUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:commercialRegistration']['ns0:branchNumber']"
										},
										"sink": {
											"name": "BRANCHNUMBER",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:establishmentCommercialName']['ns0:nameArabic']"
										},
										"sink": {
											"name": "COMPANY_ARB",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:establishmentCommercialName']['ns0:nameEnglish']"
										},
										"sink": {
											"name": "COMPANY_ENG",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:municipalityName']['ns0:nameArabic']"
										},
										"sink": {
											"name": "MUNICIPALITY_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:street']['ns0:number']"
										},
										"sink": {
											"name": "STREET_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:street']['ns0:name']['ns0:nameArabic']"
										},
										"sink": {
											"name": "STREET_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:zone']['ns0:number']"
										},
										"sink": {
											"name": "ZONE_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:location']['ns0:zone']['ns0:name']['ns0:nameArabic']"
										},
										"sink": {
											"name": "ZONE_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:managerQID']"
										},
										"sink": {
											"name": "MANAGER_QID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['env:Envelope']['env:Body']['GetCommercialPermitInfoResponse_Output']['ns0:commercialPermit']['ns0:managerName']"
										},
										"sink": {
											"name": "MANAGER_NAME",
											"type": "String"
										}
									}
								],
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "BSS_Dataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "BSS_Permit_DS",
								"type": "DatasetReference",
								"parameters": {
									"dsparamFileName": {
										"value": "@pipeline().parameters.CR_Number",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Registration",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"additionalColumns": [
									{
										"name": "MainCRNumber",
										"value": {
											"value": "@pipeline().parameters.CR_Number",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['ns0:serialNumber']"
										},
										"sink": {
											"name": "BRANCH_CR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ns0:statuses']['ns0:code']"
										},
										"sink": {
											"name": "BRANCH_STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MainCRNumber']"
										},
										"sink": {
											"name": "MainCRNumber",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['env:Envelope']['env:Body']['GetCommercialRegistrationInfoResponse_Output']['ns0:commercialRegistration']['ns0:branches']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "BSS_Dataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "BSS_Registration_DS",
								"type": "DatasetReference",
								"parameters": {
									"dsparamFileName": {
										"value": "@pipeline().parameters.CR_Number",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "16070_registration.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"parameters": {
					"CR_Number": {
						"type": "string",
						"defaultValue": "DefaultValue-ReplaceThis"
					}
				},
				"folder": {
					"name": "PL_CUSTOM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BSS_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/BSS_Permit_DS')]",
				"[concat(variables('factoryId'), '/datasets/BSS_Registration_DS')]",
				"[concat(variables('factoryId'), '/datasets/ds_BSS_Files_Folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_UI_TABLE_entity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "To create the tables on DWH database based on dwl_copy_table_list table ",
				"activities": [
					{
						"name": "ForEach Table in List_4",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Table List4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Table List4').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Truncate and Insert Table4",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@CONCAT('SELECT * FROM \t\n','',item().schema_name,'','.','',item().table_name,'',' \nWHERE  status=1')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"preCopyScript": {
												"value": "@{concat('TRUNCATE table ',item().target_schema_name,'.',item().table_name)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "qtrsqldb",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"schemaName": {
													"value": "@item().schema_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "@item().target_schema_name",
												"tableName": "@item().table_name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach Table in List_2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Table List2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Table List2').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Truncate and Insert Table2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@CONCAT('SELECT * FROM \t\n','',item().schema_name,'','.','',item().table_name,'',' \nWHERE  status=1')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"preCopyScript": {
												"value": "@{concat('TRUNCATE table ',item().target_schema_name,'.',item().table_name)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "qtrsqldb",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"schemaName": {
													"value": "@item().schema_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "@item().target_schema_name",
												"tableName": "@item().table_name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup Table List2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select * from  etl.dwl_copy_table_list\nwhere target_table_name in(\n'CompanyBranchTypes'\n,'CompanyEntityBranches')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "etl",
									"tableName": "DWL_COPY_TABLE_LIST"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup Table List4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select * from  etl.dwl_copy_table_list\nwhere target_table_name in ('CompanyEntityWarehouses'\n,'Warehouses'\n,'WarehouseTypes')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "etl",
									"tableName": "DWL_COPY_TABLE_LIST"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table in List_8",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Table List8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Table List8').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Truncate and Insert Table8",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@CONCAT('SELECT * FROM \t\n','',item().schema_name,'','.','',item().table_name,'',' \nWHERE  status=1')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"preCopyScript": {
												"value": "@{concat('TRUNCATE table ',item().target_schema_name,'.',item().table_name)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "qtrsqldb",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"schemaName": {
													"value": "@item().schema_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "@item().target_schema_name",
												"tableName": "@item().table_name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup Table List8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select * from  etl.dwl_copy_table_list\nwhere target_table_name in (\n'CompanyEntities'\n,'CompanyEntityTypes'\n,'CompanyEntityContacts')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "etl",
									"tableName": "DWL_COPY_TABLE_LIST"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"folder": {
					"name": "PL_TOOL"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-25T14:24:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_items')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_XLS_TO_STG_items",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_XLS_TO_STG_items",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_EXEC_P_DQ_ITEMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_XLS_TO_STG_items",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_PRODUCTS]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LookupDsFileName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select DISTINCT DS_FILENAME FROM dwh.STG_PRODUCTS_VALID;\nSELECT 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_stg_products_valid",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDsFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDsFileName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LookupValid",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[STG_PRODUCTS_VALID] where DS_FILENAME= ','''',item().ds_filename,'''') ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsqlp_parametric",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "dwh",
												"tableName": "STG_PRODUCTS_VALID"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupValid",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(if(\nempty(activity('LookupValid').output.value)\n,0,1),1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PL_SP_LOOP_items",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_SP_LOOP_items",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "If Condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(if(\nempty(activity('Lookup').output.value)\n,0,1),1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "PL_EXPORT_AND_EMAIL_items",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EXPORT_AND_EMAIL_items",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								}
							]
						}
					},
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT 1 AS LKP FROM DWH.STG_PRODUCTS_ERROR_LOG",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_PRODUCTS_ERROR_LOG"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PL_COPY_UI_TABLE_product",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_COPY_UI_TABLE_product",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "P_STG_PRODUCTS_VALID_ARCH",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_EXEC_P_DQ_ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_STG_PRODUCTS_VALID_ARCH]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ITEMS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stg_products_valid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BSS_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Barbaros_BSS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BSS_Permit_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsparamFileName": {
						"type": "string",
						"defaultValue": "DummyName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().dsparamFileName",
							"type": "Expression"
						},
						"fileSystem": "stagingarea"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DS_COMPANY_ENG",
						"type": "String"
					},
					{
						"name": "DS_COMPANY_ARB",
						"type": "String"
					},
					{
						"name": "FLG_MASTER_ENTITY",
						"type": "String"
					},
					{
						"name": "FLG_STRATEGIC_ENTITY",
						"type": "String"
					},
					{
						"name": "DS_CRNUMBER",
						"type": "String"
					},
					{
						"name": "DS_CLNUMBER",
						"type": "String"
					},
					{
						"name": "DS_MAIN_ADDRESS",
						"type": "String"
					},
					{
						"name": "DS_POSTAL_CODE",
						"type": "String"
					},
					{
						"name": "DS_BUILDING_NUMBER",
						"type": "String"
					},
					{
						"name": "DS_MUNICIPALITY_NAME",
						"type": "String"
					},
					{
						"name": "DS_MUNICIPALITY_NUMBER",
						"type": "String"
					},
					{
						"name": "DS_DISTRICT_NAME",
						"type": "String"
					},
					{
						"name": "DS_DISTRICT_NUMBER",
						"type": "String"
					},
					{
						"name": "DS_STREET_NAME",
						"type": "String"
					},
					{
						"name": "DS_STREET_NUMBER",
						"type": "String"
					},
					{
						"name": "DS_ZONE_NAME",
						"type": "String"
					},
					{
						"name": "DS_ZONE_NUMBER",
						"type": "String"
					},
					{
						"name": "DS_PHONENUMBER",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BSS_Permit_DS_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsparamFileName": {
						"type": "string",
						"defaultValue": "DummyName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().dsparamFileName,'_permit.csv')",
							"type": "Expression"
						},
						"fileSystem": "stagingarea"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BSS_Registration_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsparamFileName": {
						"type": "string",
						"defaultValue": "DummyName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().dsparamFileName",
							"type": "Expression"
						},
						"fileSystem": "stagingarea"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_BSS_Files_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "stagingarea"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_staging_blank_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "dummy"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "stagingarea"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_products_valid')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CompanyCR",
						"type": "nvarchar"
					},
					{
						"name": "ITEMCODE",
						"type": "nvarchar"
					},
					{
						"name": "BARCODE",
						"type": "nvarchar"
					},
					{
						"name": "PRODUCTNAMEARABIC",
						"type": "nvarchar"
					},
					{
						"name": "DESCRIPTIONARABIC",
						"type": "nvarchar"
					},
					{
						"name": "PRODUCTNAMEENGLISH",
						"type": "nvarchar"
					},
					{
						"name": "DESCRIPTIONENGLISH",
						"type": "nvarchar"
					},
					{
						"name": "UNITITEMBARCODE",
						"type": "nvarchar"
					},
					{
						"name": "NOOFUNITITEMS",
						"type": "nvarchar"
					},
					{
						"name": "UNITWEIGHTSIZE",
						"type": "nvarchar"
					},
					{
						"name": "UNITUOM",
						"type": "nvarchar"
					},
					{
						"name": "PACKAGEUOM",
						"type": "nvarchar"
					},
					{
						"name": "COSTPRICE",
						"type": "nvarchar"
					},
					{
						"name": "SELLINGPRICE",
						"type": "nvarchar"
					},
					{
						"name": "BRANDTRADEMARKENGLISH",
						"type": "nvarchar"
					},
					{
						"name": "BRANDTRADEMARKARABIC",
						"type": "nvarchar"
					},
					{
						"name": "MOCIPRODUCTGROUP",
						"type": "nvarchar"
					},
					{
						"name": "COUNTRYOFORAGENNAME",
						"type": "nvarchar"
					},
					{
						"name": "COUNTRYOFORAGENISO",
						"type": "nvarchar"
					},
					{
						"name": "HSCODE",
						"type": "nvarchar"
					},
					{
						"name": "SUPPLIERCR",
						"type": "nvarchar"
					},
					{
						"name": "SUPPLIERNAME",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL11",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL12",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL13",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORYLEVEL14",
						"type": "nvarchar"
					},
					{
						"name": "WIDTH",
						"type": "nvarchar"
					},
					{
						"name": "HEIGHT",
						"type": "nvarchar"
					},
					{
						"name": "DEPTH",
						"type": "nvarchar"
					},
					{
						"name": "ID_SK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "DT_FILETIME",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DT_CREATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DT_UPDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_PRODUCTS_VALID"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_BSS_Registiration_Process')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"linkedService": {
								"referenceName": "ls_dsqlpqtr",
								"type": "LinkedServiceReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_psmsii_syntodls",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "MapDrifted3",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpurgeFiles: true,\n\twildcardPaths:['*_regtemp.csv']) ~> source1\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'query',\n\tstore: 'synapseanalytics',\n\tquery: 'SELECT\\nDS_SUPPLIER_CR AS BRANCH_CR,\\n\\'Active\\' AS BRANCH_STATUS,\\nDS_SUPPLIER_CR AS MainCRNumber\\nFROM [dwh].[DWL_CUSTOMS_DECLARATION] WHERE FLG_SUPPLIER_CHECK=1\\nAND DS_SUPPLIER_CR IS NOT NULL',\n\tisolationLevel: 'NONE',\n\tstaged: false) ~> source3\nsource1 derive(BRANCH_CR = toString(byName('BRANCH_CR')),\n\t\tBRANCH_STATUS = toString(byName('BRANCH_STATUS')),\n\t\tMainCRNumber = toString(byName('MainCRNumber'))) ~> MapDrifted3\nMapDrifted3, source3 union(byName: true)~> Union1\nUnion1 filter(equalsIgnoreCase(BRANCH_STATUS,'Active')) ~> Filter1\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tfileSystem: 'stagingarea',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['BSS_Source_CR_List.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_BSS_Files_Folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_BSS_Registiration_Process_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_psmsii_syntodls",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "ls_psmsii_syntodls",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "MapDrifted2",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapDrifted3",
							"description": "Creates an explicit mapping for each drifted column"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpurgeFiles: true,\n\twildcardPaths:['*_registration.csv']) ~> source1\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpurgeFiles: true,\n\twildcardPaths:['*_permit.csv']) ~> source2\nsource2 derive(CRNUMBER = toString(byName('CRNUMBER')),\n\t\tBRANCHNUMBER = toString(byName('BRANCHNUMBER')),\n\t\tCOMPANY_ARB = toString(byName('COMPANY_ARB')),\n\t\tCOMPANY_ENG = toString(byName('COMPANY_ENG')),\n\t\tMUNICIPALITY_NAME = toString(byName('MUNICIPALITY_NAME')),\n\t\tSTREET_NUMBER = toString(byName('STREET_NUMBER')),\n\t\tSTREET_NAME = toString(byName('STREET_NAME')),\n\t\tZONE_NUMBER = toString(byName('ZONE_NUMBER')),\n\t\tZONE_NAME = toString(byName('ZONE_NAME')),\n\t\tMANAGER_QID = toString(byName('MANAGER_QID')),\n\t\tMANAGER_NAME = toString(byName('MANAGER_NAME')),\n\t\tCRNumber_Key = toString(byName('CRNumber_Key'))) ~> MapDrifted2\nsource1 derive(POBox = toString(byName('POBox')),\n\t\tTelephone = toString(byName('Telephone')),\n\t\tMainCRNumber = toString(byName('MainCRNumber')),\n\t\tCRNumber = toString(byName('CRNumber'))) ~> MapDrifted3\nMapDrifted3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tfileSystem: 'stagingarea',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['bss_all_register_data.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nMapDrifted2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBranchCR as string,\n\t\tStatus as string,\n\t\tSourceFileName as string\n\t),\n\tformat: 'delimited',\n\tfileSystem: 'stagingarea',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['bss_all_permit_data.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_BSS_Files_Folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_BSS_Registiration_Process_copy2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ds_BSS_Files_Folder",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_psmsii_syntodsqlp",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapDrifted2",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Join1"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpurgeFiles: true,\n\twildcardPaths:['bss_all_register_data.csv']) ~> source1\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpurgeFiles: true,\n\twildcardPaths:['bss_all_permit_data.csv']) ~> source2\nsource1 derive(POBox = toString(byName('POBox')),\n\t\tTelephone = toString(byName('Telephone')),\n\t\tMainCRNumber = toString(byName('MainCRNumber')),\n\t\tCRNumber = toString(byName('CRNumber'))) ~> MapDrifted1\nsource2 derive(CRNUMBER = toString(byName('CRNUMBER')),\n\t\tBRANCHNUMBER = toString(byName('BRANCHNUMBER')),\n\t\tCOMPANY_ARB = toString(byName('COMPANY_ARB')),\n\t\tCOMPANY_ENG = toString(byName('COMPANY_ENG')),\n\t\tMUNICIPALITY_NAME = toString(byName('MUNICIPALITY_NAME')),\n\t\tSTREET_NUMBER = toString(byName('STREET_NUMBER')),\n\t\tSTREET_NAME = toString(byName('STREET_NAME')),\n\t\tZONE_NUMBER = toString(byName('ZONE_NUMBER')),\n\t\tZONE_NAME = toString(byName('ZONE_NAME')),\n\t\tMANAGER_QID = toString(byName('MANAGER_QID')),\n\t\tMANAGER_NAME = toString(byName('MANAGER_NAME')),\n\t\tCRNumber_Key = toString(byName('CRNumber_Key'))) ~> MapDrifted2\nMapDrifted2, MapDrifted1 join(CRNumber_Key == MapDrifted1@CRNumber,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tMAIN_CRNUMBER as long,\n\t\tBRANCHNUMBER as integer,\n\t\tCOMPANY_ARB as string,\n\t\tCOMPANY_ENG as string,\n\t\tMUNICIPALITY_NAME as string,\n\t\tSTREET_NUMBER as integer,\n\t\tSTREET_NAME as string,\n\t\tZONE_NUMBER as integer,\n\t\tZONE_NAME as string,\n\t\tMANAGER_QID as long,\n\t\tMANAGER_NAME as string,\n\t\tPOBox as integer,\n\t\tTelephone as string,\n\t\tCRNumber as string\n\t),\n\tformat: 'table',\n\tstore: 'synapseanalytics',\n\tschemaName: 'tmp',\n\ttableName: 'STG_BSS_DATA',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\ttruncate: true,\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tMAIN_CRNUMBER = MapDrifted2@CRNUMBER,\n\t\tBRANCHNUMBER,\n\t\tCOMPANY_ARB,\n\t\tCOMPANY_ENG,\n\t\tMUNICIPALITY_NAME,\n\t\tSTREET_NUMBER,\n\t\tSTREET_NAME,\n\t\tZONE_NUMBER,\n\t\tZONE_NAME,\n\t\tMANAGER_QID,\n\t\tMANAGER_NAME,\n\t\tPOBox,\n\t\tTelephone,\n\t\tCRNumber = MapDrifted1@CRNumber\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_BSS_Files_Folder')]"
			]
		}
	]
}