{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfpsmsiidt001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_entity_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "P_STG_VALID_INSERT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_EXPORT_AND_EMAIL_company",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EXPORT_AND_EMAIL_warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EXPORT_AND_EMAIL_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_STG_VALID_INSERT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_entity_xls",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "truncateStgCompany",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_COMPANY];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_COMPANY"
								}
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_company",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_company",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcompanycontainer": {
													"filename": "@item().name",
													"folderName": "Entity",
													"SheetIndex": 0
												},
												"stgCompany": {
													"schemaName": "dwh",
													"tableName": "STG_COMPANY"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncateStgWarehouse",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_WAREHOUSE];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_WAREHOUSE"
								}
							}
						}
					},
					{
						"name": "ForEachFile_warehouse",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgWarehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_warehouse",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_warehouse",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"filename": "@item().name"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "ForEachFile_contact",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgContact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_contact",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_contact",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcontactcontainer": {
													"filename": "@item().name"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncateStgContact",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_CONTACT];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_CONTACT"
								}
							}
						}
					},
					{
						"name": "P_DQ_COMPANY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_COMPANY]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_company",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_COMPANY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_company",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "P_DQ_WAREHOUSE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachFile_warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_WAREHOUSE]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_warehouse",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_WAREHOUSE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_warehouse",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "P_DQ_CONTACT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachFile_contact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dwh].[P_DQ_CONTACT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_dsqlpqtr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_EXPORT_AND_EMAIL_contact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "P_DQ_CONTACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EXPORT_AND_EMAIL_contact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_input_entity_xls')]",
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]",
				"[concat(variables('factoryId'), '/dataflows/df_xls_to_stg_warehouse')]",
				"[concat(variables('factoryId'), '/dataflows/df_xls_to_stg_contact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_contact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get file list from processing container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_contact_xls",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_contacts",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_contact",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputcontactcontainer": {
													"filename": "@item().name"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/CONTACT"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_input_contact_xls')]",
				"[concat(variables('factoryId'), '/dataflows/df_xls_to_stg_contact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_XLS_TO_STG_warehouse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "truncateStgWarehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "df_xls_to_stg_warehouse",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_xls_to_stg_warehouse",
											"type": "DataFlowReference",
											"parameters": {
												"fileName": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"filename": "@item().name"
												}
											}
										},
										"staging": {
											"linkedService": {
												"referenceName": "ls_psmsii_syntodls",
												"type": "LinkedServiceReference"
											},
											"folderPath": "stagingarea"
										},
										"integrationRuntime": {
											"referenceName": "integrationRuntime10min",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Coarse"
									}
								}
							]
						}
					},
					{
						"name": "truncateStgWarehouse",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [dwh].[STG_WAREHOUSE];\nselect 1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsqlp_parametric",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dwh",
									"tableName": "STG_WAREHOUSE"
								}
							}
						}
					},
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dls_input_warehouse_xls",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "PL_INITIAL_LOAD/ENTITY/WAREHOUSE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsqlp_parametric')]",
				"[concat(variables('factoryId'), '/datasets/dls_input_warehouse_xls')]",
				"[concat(variables('factoryId'), '/dataflows/df_xls_to_stg_warehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_input_contact_xls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "Entity",
						"fileSystem": "input"
					},
					"sheetIndex": 2,
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Seq-مسلسل",
						"type": "String"
					},
					{
						"name": "Name-الاسم",
						"type": "String"
					},
					{
						"name": "eMail- البريد الالكترونى",
						"type": "String"
					},
					{
						"name": "Phone-الهاتف",
						"type": "String"
					},
					{
						"name": "Extension-التحويلة",
						"type": "String"
					},
					{
						"name": "Mobile-الموبايل",
						"type": "String"
					},
					{
						"name": "Entity CR-رقم السجل التجارى",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_input_entity_xls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string",
						"defaultValue": "'a'"
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Entity",
						"fileSystem": "input"
					},
					"sheetIndex": 1,
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_input_xls_parametric')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "22071_Entity.xlsx"
					},
					"folderName": {
						"type": "string",
						"defaultValue": "Entity"
					},
					"SheetIndex": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"sheetIndex": {
						"value": "@dataset().SheetIndex",
						"type": "Expression"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsqlp_parametric')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodsqlp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string",
						"defaultValue": "dwh"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "STG_CONTACT"
					}
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_xls_to_stg_contact')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dls_input_contact_xls",
								"type": "DatasetReference"
							},
							"name": "inputcontactcontainer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_contact",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AddColumn"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "parameters{\n\tfileName as string ('22071_Entity.xlsx')\n}\nsource(output(\n\t\t{Seq-مسلسل} as string,\n\t\t{Name-الاسم} as string,\n\t\t{eMail- البريد الالكترونى} as string,\n\t\t{Phone-الهاتف} as string,\n\t\t{Extension-التحويلة} as string,\n\t\t{Mobile-الموبايل} as string,\n\t\t{Entity CR-رقم السجل التجارى} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputcontactcontainer\nFilter1 derive(DS_FILENAME = $fileName,\n\t\tDT_FILETIME = left(toString(fromUTC(currentTimestamp(), 'Asia/Istanbul')),19)) ~> AddColumn\nAddColumn keyGenerate(output(ID_SK as long),\n\tstartAt: 1L) ~> SurrogateKey1\ninputcontactcontainer select(mapColumn(\n\t\teach(match(true()),\n\t\t\tregexReplace($$,'[^0-9a-zA-Z]','') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(isNull(iifNull(iifNull(EntityCR,Name,eMail),iifNull(Phone,Extension,Mobile))) != true()) ~> Filter1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSEQ as string,\n\t\tNAME as string,\n\t\tEMAIL as string,\n\t\tPHONE as string,\n\t\tEXTENSION as string,\n\t\tMOBILE as string,\n\t\tENTITYCR as string,\n\t\tID_SK as integer,\n\t\tDS_FILENAME as string,\n\t\tDT_FILETIME as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSEQ = Seq,\n\t\tNAME = Name,\n\t\tEMAIL = eMail,\n\t\tPHONE = Phone,\n\t\tEXTENSION = Extension,\n\t\tMOBILE = Mobile,\n\t\tENTITYCR = EntityCR,\n\t\tID_SK,\n\t\tDS_FILENAME,\n\t\tDT_FILETIME\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_input_contact_xls')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_contact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_xls_to_stg_warehouse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dls_input_warehouse_xls",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_stg_warehouse",
								"type": "DatasetReference"
							},
							"name": "stgWarehouse"
						}
					],
					"transformations": [
						{
							"name": "AddColumn"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "parameters{\n\tfileName as string ('a')\n}\nsource(output(\n\t\t{Store Code-رقم المخزن} as string,\n\t\t{Entity Commercial Registration No-رقم السجل التجارى للشركة} as string,\n\t\t{Entity Commercial License No-رقم الرخصة التجارىة للشركة} as string,\n\t\t{Warehouse/Store Commercial Registration No-رقم السجل التجارى للمخزن} as string,\n\t\t{Warehouse/Store Commercial License No-رقم الرخصة التجارىة للمخزن} as string,\n\t\t{Warehouse/Store Code-رقم المخزن} as string,\n\t\t{Area Name-اسم المنطقة} as string,\n\t\t{St. Name-اسم الشارع } as string,\n\t\t{Area Code-رقم المنطقة} as string,\n\t\t{St. No-رقم الشارع} as string,\n\t\t{Building ID-رقم البناية } as string,\n\t\t{Map Location URL-الخريطه} as string,\n\t\t{Total Store Area M2-اجمالى المساحة متر مربع} as string,\n\t\t{Storage Capacity in TON-السعة التخزينية بالطن} as string,\n\t\t{Storage Type-نوع التخزين} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nFilter1 derive(DS_FILENAME = $fileName,\n\t\tDT_FILETIME = left(toString(fromUTC(currentTimestamp(), 'Asia/Istanbul')),19)) ~> AddColumn\nAddColumn keyGenerate(output(ID_SK as long),\n\tstartAt: 1L) ~> SurrogateKey1\nsource1 select(mapColumn(\n\t\teach(match(true()),\n\t\t\tregexReplace($$,'[^0-9a-zA-Z]','') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(isNull(iifNull(iifNull(StoreCode,EntityCommercialRegistrationNo,EntityCommercialLicenseNo),iifNull(WarehouseStoreCommercialRegistrationNo,WarehouseStoreCommercialLicenseNo,WarehouseStoreCode),iifNull(iifNull(AreaName,StName,AreaCode),\niifNull(StNo,BuildingID,MapLocationURL),iifNull(TotalStoreAreaM2,StorageCapacityinTON,StorageType))))!= true()) ~> Filter1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSTORECODE as string,\n\t\tENTITYCOMMERCIALREGISTRATIONNO as string,\n\t\tENTITYCOMMERCIALLICENSENO as string,\n\t\tWAREHOUSESTORECOMMERCIALREGISTRATIONNO as string,\n\t\tWAREHOUSESTORECOMMERCIALLICENSENO as string,\n\t\tWAREHOUSESTORECODE as string,\n\t\tAREANAME as string,\n\t\tSTNAME as string,\n\t\tAREACODE as string,\n\t\tSTNO as string,\n\t\tBUILDINGID as string,\n\t\tMAPLOCATIONURL as string,\n\t\tTOTALSTOREAREAM2 as string,\n\t\tSTORAGECAPACITYINTON as string,\n\t\tSTORAGETYPE as string,\n\t\tID_SK as integer,\n\t\tDS_FILENAME as string,\n\t\tDT_FILETIME as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSTORECODE = StoreCode,\n\t\tENTITYCOMMERCIALREGISTRATIONNO = EntityCommercialRegistrationNo,\n\t\tENTITYCOMMERCIALLICENSENO = EntityCommercialLicenseNo,\n\t\tWAREHOUSESTORECOMMERCIALREGISTRATIONNO = WarehouseStoreCommercialRegistrationNo,\n\t\tWAREHOUSESTORECOMMERCIALLICENSENO = WarehouseStoreCommercialLicenseNo,\n\t\tWAREHOUSESTORECODE = WarehouseStoreCode,\n\t\tAREANAME = AreaName,\n\t\tSTNAME = StName,\n\t\tAREACODE = AreaCode,\n\t\tSTNO = StNo,\n\t\tBUILDINGID = BuildingID,\n\t\tMAPLOCATIONURL = MapLocationURL,\n\t\tTOTALSTOREAREAM2 = TotalStoreAreaM2,\n\t\tSTORAGECAPACITYINTON = StorageCapacityinTON,\n\t\tSTORAGETYPE = StorageType,\n\t\tID_SK,\n\t\tDS_FILENAME,\n\t\tDT_FILETIME\n\t)) ~> stgWarehouse"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dls_input_warehouse_xls')]",
				"[concat(variables('factoryId'), '/datasets/ds_stg_warehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_contact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SEQ",
						"type": "nvarchar"
					},
					{
						"name": "NAME",
						"type": "nvarchar"
					},
					{
						"name": "EMAIL",
						"type": "nvarchar"
					},
					{
						"name": "PHONE",
						"type": "nvarchar"
					},
					{
						"name": "EXTENSION",
						"type": "nvarchar"
					},
					{
						"name": "MOBILE",
						"type": "nvarchar"
					},
					{
						"name": "ENTITYCR",
						"type": "nvarchar"
					},
					{
						"name": "ID_SK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "DT_FILETIME",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_CONTACT"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_warehouse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dedicated_SQL"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STORECODE",
						"type": "nvarchar"
					},
					{
						"name": "ENTITYCOMMERCIALREGISTRATIONNO",
						"type": "nvarchar"
					},
					{
						"name": "ENTITYCOMMERCIALLICENSENO",
						"type": "nvarchar"
					},
					{
						"name": "WAREHOUSESTORECOMMERCIALREGISTRATIONNO",
						"type": "nvarchar"
					},
					{
						"name": "WAREHOUSESTORECOMMERCIALLICENSENO",
						"type": "nvarchar"
					},
					{
						"name": "WAREHOUSESTORECODE",
						"type": "nvarchar"
					},
					{
						"name": "AREANAME",
						"type": "nvarchar"
					},
					{
						"name": "STNAME",
						"type": "nvarchar"
					},
					{
						"name": "AREACODE",
						"type": "nvarchar"
					},
					{
						"name": "STNO",
						"type": "nvarchar"
					},
					{
						"name": "BUILDINGID",
						"type": "nvarchar"
					},
					{
						"name": "MAPLOCATIONURL",
						"type": "nvarchar"
					},
					{
						"name": "TOTALSTOREAREAM2",
						"type": "nvarchar"
					},
					{
						"name": "STORAGECAPACITYINTON",
						"type": "nvarchar"
					},
					{
						"name": "STORAGETYPE",
						"type": "nvarchar"
					},
					{
						"name": "ID_SK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DS_FILENAME",
						"type": "nvarchar"
					},
					{
						"name": "DT_FILETIME",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh",
					"table": "STG_WAREHOUSE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_input_warehouse_xls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_psmsii_syntodls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Storage_DL_QTR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "Entity",
						"fileSystem": "input"
					},
					"sheetIndex": 1,
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Store Code-رقم المخزن",
						"type": "String"
					},
					{
						"name": "Entity Commercial Registration No-رقم السجل التجارى للشركة",
						"type": "String"
					},
					{
						"name": "Entity Commercial License No-رقم الرخصة التجارىة للشركة",
						"type": "String"
					},
					{
						"name": "Warehouse/Store Commercial Registration No-رقم السجل التجارى للمخزن",
						"type": "String"
					},
					{
						"name": "Warehouse/Store Commercial License No-رقم الرخصة التجارىة للمخزن",
						"type": "String"
					},
					{
						"name": "Warehouse/Store Code-رقم المخزن",
						"type": "String"
					},
					{
						"name": "Area Name-اسم المنطقة",
						"type": "String"
					},
					{
						"name": "St. Name-اسم الشارع ",
						"type": "String"
					},
					{
						"name": "Area Code-رقم المنطقة",
						"type": "String"
					},
					{
						"name": "St. No-رقم الشارع",
						"type": "String"
					},
					{
						"name": "Building ID-رقم البناية ",
						"type": "String"
					},
					{
						"name": "Map Location URL-الخريطه",
						"type": "String"
					},
					{
						"name": "Total Store Area M2-اجمالى المساحة متر مربع",
						"type": "String"
					},
					{
						"name": "Storage Capacity in TON-السعة التخزينية بالطن",
						"type": "String"
					},
					{
						"name": "Storage Type-نوع التخزين",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}