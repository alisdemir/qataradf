{
	"name": "PL_MAIN_entity",
	"properties": {
		"activities": [
			{
				"name": "GetFileList",
				"description": "Get file list from processing container",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "dls_input_entity_xls",
						"type": "DatasetReference",
						"parameters": {
							"fileName": "*"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "truncateStgCompany",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "truncate table [dwh].[STG_COMPANY_RAW];\ntruncate table [dwh].[STG_WAREHOUSE_RAW];\ntruncate table [dwh].[STG_CONTACT_RAW];\nselect 1;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dsqlp_parametric",
						"type": "DatasetReference",
						"parameters": {
							"schemaName": "dwh",
							"tableName": "STG_COMPANY"
						}
					}
				}
			},
			{
				"name": "ForEachFile_company",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "truncateStgCompany",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "df_xls_to_stg_company",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_xls_to_stg_company",
									"type": "DataFlowReference",
									"parameters": {
										"fileName": {
											"value": "'@{item().name}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"inputcompanycontainer": {
											"filename": {
												"value": "@item().name",
												"type": "Expression"
											},
											"folderName": "Entity",
											"SheetIndex": 0
										}
									}
								},
								"staging": {
									"linkedService": {
										"referenceName": "ls_psmsii_syntodls",
										"type": "LinkedServiceReference"
									},
									"folderPath": "stagingarea"
								},
								"integrationRuntime": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "Coarse"
							}
						}
					]
				}
			},
			{
				"name": "ForEachFile_warehouse",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "truncateStgCompany",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "df_xls_to_stg_warehouse",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_xls_to_stg_warehouse",
									"type": "DataFlowReference",
									"parameters": {
										"fileName": {
											"value": "'@{item().name}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"source1": {
											"filename": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								"staging": {
									"linkedService": {
										"referenceName": "ls_psmsii_syntodls",
										"type": "LinkedServiceReference"
									},
									"folderPath": "stagingarea"
								},
								"integrationRuntime": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "Coarse"
							}
						}
					]
				}
			},
			{
				"name": "ForEachFile_contact",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "truncateStgCompany",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "df_xls_to_stg_contacts",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_xls_to_stg_contact",
									"type": "DataFlowReference",
									"parameters": {
										"fileName": {
											"value": "'@{item().name}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"inputcontactcontainer": {
											"filename": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								"staging": {
									"linkedService": {
										"referenceName": "ls_psmsii_syntodls",
										"type": "LinkedServiceReference"
									},
									"folderPath": "stagingarea"
								},
								"integrationRuntime": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "Coarse"
							}
						}
					]
				}
			},
			{
				"name": "SP_STG_VALID_INSERT",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "PL_DQ_COMPANY",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "PL_DQ_WAREHOUSE",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "PL_DQ_CONTACT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dwh].[P_STG_VALID_INSERT]"
				},
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LookupDsFileName",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP_STG_VALID_INSERT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "select DISTINCT DS_FILENAME FROM dwh.STG_ENTITY_VALID;\nSELECT 1;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_stg_entity_valid",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupDsFileName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupDsFileName').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "LookupValid",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT 1 as lkp_id\n  FROM [dwh].[STG_ENTITY_VALID] where DS_FILENAME= ','''',item().ds_filename,'''') ",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dsqlp_parametric",
									"type": "DatasetReference",
									"parameters": {
										"schemaName": "dwh",
										"tableName": "STG_ENTITY_VALID"
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "LookupValid",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(if(\nempty(activity('LookupValid').output.value)\n,0,1),1)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "PL_SP_LOOP_entity",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "PL_SP_LOOP_entity",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "PL_DQ_COMPANY",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEachFile_company",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dwh].[P_DQ_COMPANY]"
				},
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PL_DQ_WAREHOUSE",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEachFile_warehouse",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dwh].[P_DQ_WAREHOUSE]"
				},
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PL_DQ_CONTACT",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEachFile_contact",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dwh].[P_DQ_CONTACT]"
				},
				"linkedServiceName": {
					"referenceName": "ls_dsqlpqtr",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Condition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(if(\nempty(activity('lookup').output.value)\n,0,1),1)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "df_errlogcontainer_warehouse",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_errlog_container_warehouse",
									"type": "DataFlowReference",
									"datasetParameters": {
										"stgwarehouseerrorlog": {
											"schemaName": "dwh",
											"tableName": "STG_WAREHOUSE_ERROR_LOG"
										},
										"errorlogwarehouse": {
											"folderName": "Entity"
										}
									}
								},
								"staging": {
									"linkedService": {
										"referenceName": "ls_psmsii_syntodls",
										"type": "LinkedServiceReference"
									},
									"folderPath": "stagingarea"
								},
								"integrationRuntime": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "Coarse"
							}
						},
						{
							"name": "MoveFiles",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "df_errlogcontainer_warehouse",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFileName": "*_Entity_warehouse_err*",
										"deleteFilesAfterCompletion": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "dls_errorlog_binary",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "dls_errorlog_binary_parametric",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": "Entity"
									}
								}
							]
						},
						{
							"name": "df_errlogcontainer_company",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_errlog_container_company",
									"type": "DataFlowReference",
									"datasetParameters": {
										"stgcompanyerrorlog": {
											"schemaName": "dwh",
											"tableName": "STG_COMPANY_ERROR_LOG"
										},
										"errorlogcompany": {
											"folderName": "Entity"
										}
									}
								},
								"staging": {
									"linkedService": {
										"referenceName": "ls_psmsii_syntodls",
										"type": "LinkedServiceReference"
									},
									"folderPath": "stagingarea"
								},
								"integrationRuntime": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "Coarse"
							}
						},
						{
							"name": "MoveFiles_company",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "df_errlogcontainer_company",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFileName": "*_Entity_company_err*",
										"deleteFilesAfterCompletion": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "dls_errorlog_binary",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "dls_errorlog_binary_parametric",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": "Entity"
									}
								}
							]
						},
						{
							"name": "df_errlog_container_contact",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_errlog_container_contact",
									"type": "DataFlowReference",
									"datasetParameters": {
										"stgcontacterrlog": {
											"schemaName": "dwh",
											"tableName": "STG_CONTACT_ERROR_LOG"
										},
										"errorlogcontact": {
											"folderName": "Entity"
										}
									}
								},
								"integrationRuntime": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "Coarse"
							}
						},
						{
							"name": "MoveFiles_contact",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "df_errlog_container_contact",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFileName": "*_Entity_contact_err*",
										"deleteFilesAfterCompletion": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "dls_errorlog_binary",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "dls_errorlog_binary_parametric",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": "Entity"
									}
								}
							]
						},
						{
							"name": "lapp_qtr_email_contact",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "MoveFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "MoveFiles_company",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "MoveFiles_contact",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://lapp-psmsii-dt-westeu-004.azurewebsites.net:443/api/lappwf_psmsii_dt_004/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=15wUpxpuUyCPOCZGqmX4tdaWoFf0aSPataovrmVc-Ss",
								"connectVia": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"method": "POST",
								"body": {
									"EmailType": "EntityFileErrors"
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "PL_DQ_WAREHOUSE",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "PL_DQ_CONTACT",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "PL_DQ_COMPANY",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": " SELECT DISTINCT 1 AS  CNT FROM (\n select   DS_FILENAME from [dwh].[STG_COMPANY_ERROR_LOG]\n UNION \n SELECT   DS_FILENAME from [dwh].[STG_WAREHOUSE_ERROR_LOG]\n UNION \n SELECT   DS_FILENAME from [dwh].[STG_CONTACT_ERROR_LOG]\n ) A",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_stg_contact_error_log",
						"type": "DatasetReference"
					}
				}
			}
		],
		"folder": {
			"name": "PL_INITIAL_LOAD/ENTITY"
		},
		"annotations": []
	}
}