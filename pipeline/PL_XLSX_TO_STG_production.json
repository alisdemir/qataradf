{
	"name": "PL_XLSX_TO_STG_production",
	"properties": {
		"activities": [
			{
				"name": "GetFileList",
				"description": "Get file list from processing container",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "dls_input_xls_products",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "ForEachFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "df_xlsx_to_stg_products",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"staging": {
									"linkedService": {
										"referenceName": "ls_psmsii_syntodls",
										"type": "LinkedServiceReference"
									},
									"folderPath": "stagingarea"
								},
								"integrationRuntime": {
									"referenceName": "integrationRuntime10min",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "Coarse"
							}
						}
					]
				}
			}
		],
		"concurrency": 1,
		"folder": {
			"name": "Dev"
		},
		"annotations": [],
		"lastPublishTime": "2021-05-20T12:55:14Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}